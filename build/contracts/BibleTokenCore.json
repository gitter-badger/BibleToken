{
  "contractName": "BibleTokenCore",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "updateBookNameGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintVerseGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentBookName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "updateChapterVersesIGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "booksCompleted",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentVerseNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "queryCount",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentNumberOfChapters",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractCanMint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "updateChapterVersesIIGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenIndex",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "halted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "ownerUnhalt",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentChapterNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentChapterVersesNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "updateNumberOfChaptersGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_bookName",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_chapterNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "_verseNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "_verseText",
          "type": "string"
        }
      ],
      "name": "VerseMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "OraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Halt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unhalt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_gasPrice",
          "type": "uint256"
        }
      ],
      "name": "setOraclizeGasPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mintVerseGasLimit",
          "type": "uint256"
        },
        {
          "name": "_updateBookNameGasLimit",
          "type": "uint256"
        },
        {
          "name": "_updateNumberOfChaptersGasLimit",
          "type": "uint256"
        },
        {
          "name": "_updateChapterVersesIGasLimit",
          "type": "uint256"
        },
        {
          "name": "_updateChapterVersesIIGasLimit",
          "type": "uint256"
        }
      ],
      "name": "setOraclizeGasLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_url",
          "type": "string"
        }
      ],
      "name": "setURL",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_booksCompleted",
          "type": "uint8"
        },
        {
          "name": "_currentBookName",
          "type": "string"
        },
        {
          "name": "_currentNumberOfChapters",
          "type": "uint8"
        },
        {
          "name": "_currentChapterVersesNumber",
          "type": "uint8"
        },
        {
          "name": "_currentChapterNumber",
          "type": "uint8"
        },
        {
          "name": "_currentVerseNumber",
          "type": "uint8"
        }
      ],
      "name": "setStateVariables",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenIndex",
          "type": "uint256"
        },
        {
          "name": "_bookName",
          "type": "string"
        },
        {
          "name": "_chapterNumber",
          "type": "uint8"
        },
        {
          "name": "_verseNumber",
          "type": "uint8"
        },
        {
          "name": "_verseText",
          "type": "string"
        }
      ],
      "name": "auditVerse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_book",
          "type": "string"
        },
        {
          "name": "_chapter",
          "type": "uint8"
        },
        {
          "name": "_verse",
          "type": "uint8"
        }
      ],
      "name": "retrieveVerse",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addFunds",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6003805460c060020a60ff021916905566d529ae9e860000601155621e8480601255620f42406013819055601481905560158190556016556017805462ffffff1916905560c0604052600a60808190527f4269626c65546f6b656e0000000000000000000000000000000000000000000060a09081526200008491601891906200058c565b506040805180820190915260028082527f42540000000000000000000000000000000000000000000000000000000000006020909201918252620000cb916019916200058c565b50348015620000d957600080fd5b506003805464010000000033027fffffffffffffffff0000000000000000000000000000000000000000ffffffff9091161790557f01ffc9a7000000000000000000000000000000000000000000000000000000006000908152600460208181527f9fe05126d2d9ecf60592e254dead906a4b2e492f36cca727682c38e9008c6ac1805460ff199081166001908117909255604080517f6973417070726f766564466f72416c6c28616464726573732c6164647265737381527f29000000000000000000000000000000000000000000000000000000000000008186015281519081900360210181207f676574417070726f7665642875696e7432353629000000000000000000000000825282519182900360140182207f736574417070726f76616c466f72416c6c28616464726573732c626f6f6c29008352835192839003601f0183207f617070726f766528616464726573732c75696e74323536290000000000000000845284519384900360180184207f7472616e7366657246726f6d28616464726573732c616464726573732c75696e85527f7432353629000000000000000000000000000000000000000000000000000000858a015285519485900360250185207f736166655472616e7366657246726f6d28616464726573732c616464726573738087527f2c75696e74323536290000000000000000000000000000000000000000000000878c015287519687900360290187209087527f2c75696e743235362c6279746573290000000000000000000000000000000000878c0152875196879003602f0187207f6f776e65724f662875696e743235362900000000000000000000000000000000885288519788900360100188207f62616c616e63654f6628616464726573732900000000000000000000000000008952895198899003601201892018181818181818187fffffffff00000000000000000000000000000000000000000000000000000000908116885286865282882080548516861790557f746f74616c537570706c792829000000000000000000000000000000000000008252825191829003600d0182208116885286865282882080548516861790557f73796d626f6c2829000000000000000000000000000000000000000000000000825282519182900360080182207f6e616d6528290000000000000000000000000000000000000000000000000000835283519283900360060183201816875294845280862080549092169092179055608083018152604b8084527f786d6c28516d57484d3651316a4c6e3554737a4d515659764c61536a336275679284019283527f3271536b574765793345784447796f595179292e7870617468282f4269626c65918401919091527f2f426f6f6b5b4069643d27000000000000000000000000000000000000000000606090930192909252620004fe92916200058c565b506001805460ff191690556040805180820190915260078082527f47656e657369730000000000000000000000000000000000000000000000000060209092019182526200054f916002916200058c565b5060038054630100000062010000603260ff199093169290921761ff001916611f001762ff000019169190911763ff000000191617905562000631565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005cf57805160ff1916838001178555620005ff565b82800160010185558215620005ff579182015b82811115620005ff578251825591602001919060010190620005e2565b506200060d92915062000611565b5090565b6200062e91905b808211156200060d576000815560010162000618565b90565b61425c80620006416000396000f3006080604052600436106102215763ffffffff60e060020a60003504166301ffc9a7811461022657806306fdde0314610271578063081812fc146102fb578063095ea7b31461032f57806310c5cf54146103555780631249c58b1461037c578063135e85741461038457806318160ddd146103ed5780631cbd74051461040257806323b872dd1461041757806327dc297e1461044157806333b452af1461049f57806335df3bd6146104de57806338bbfa50146104f35780633f4ba83a1461058f57806342842e0e146105a45780635c975abb146105ce5780635fd8c710146105e35780636352211e146105f85780636c2b99e6146106105780636e2387f41461064f57806370a082311461066457806371c82c1414610685578063773434081461069d5780638456cb59146106bd5780638b7afe2e146106d25780638da5cb5b146106e757806391b7f5ed146106fc57806395d89b41146107145780639894eab21461072957806399118448146107545780639b2aded414610769578063a035b1fe1461077e578063a22cb46514610793578063a26759cb146107b9578063b15b5b81146107c1578063b28725e7146107d6578063b652dd3e146107eb578063b88d4fde14610800578063b9b8af0b14610839578063be0e95a51461084e578063d0c5e63a14610863578063d523be0414610878578063d94da8011461088d578063e985e9c5146108a2578063f2fde38b146108c9578063f71fe149146108ea575b600080fd5b34801561023257600080fd5b5061025d7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff196004351661090e565b604080519115158252519081900360200190f35b34801561027d57600080fd5b50610286610946565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102c05781810151838201526020016102a8565b50505050905090810190601f1680156102ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561030757600080fd5b506103136004356109dd565b60408051600160a060020a039092168252519081900360200190f35b34801561033b57600080fd5b50610353600160a060020a0360043516602435610a1f565b005b34801561036157600080fd5b5061036a610b66565b60408051918252519081900360200190f35b610353610b6c565b34801561039057600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102869436949293602493928401919081908401838280828437509497505060ff8535811696506020909501359094169350610bcf92505050565b3480156103f957600080fd5b5061036a610ea1565b34801561040e57600080fd5b5061036a610ea7565b34801561042357600080fd5b50610353600160a060020a0360043581169060243516604435610ead565b34801561044d57600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610353958335953695604494919390910191908190840183828082843750949750610f9a9650505050505050565b3480156104ab57600080fd5b5061035360ff60048035821691602480359081019201359060443581169060643581169060843581169060a43516611099565b3480156104ea57600080fd5b5061028661113e565b3480156104ff57600080fd5b5060408051602060046024803582810135601f810185900485028601850190965285855261035395833595369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506111c99650505050505050565b34801561059b57600080fd5b506103536111ce565b3480156105b057600080fd5b50610353600160a060020a0360043581169060243516604435611252565b3480156105da57600080fd5b5061025d61126e565b3480156105ef57600080fd5b5061035361127e565b34801561060457600080fd5b506103136004356112e3565b34801561061c57600080fd5b5061035360048035906024803580820192908101359160ff60443581169260643590911691608435908101910135611307565b34801561065b57600080fd5b5061036a611415565b34801561067057600080fd5b5061036a600160a060020a036004351661141b565b34801561069157600080fd5b5061035360043561144e565b3480156106a957600080fd5b506103536004803560248101910135611491565b3480156106c957600080fd5b506103536114d4565b3480156106de57600080fd5b5061036a61155d565b3480156106f357600080fd5b50610313611565565b34801561070857600080fd5b5061035360043561157c565b34801561072057600080fd5b506102866115cb565b34801561073557600080fd5b5061073e61162c565b6040805160ff9092168252519081900360200190f35b34801561076057600080fd5b5061073e611635565b34801561077557600080fd5b5061073e611645565b34801561078a57600080fd5b5061036a61164e565b34801561079f57600080fd5b50610353600160a060020a03600435166024351515611654565b6102866116d7565b3480156107cd57600080fd5b5061073e61170e565b3480156107e257600080fd5b5061025d611717565b3480156107f757600080fd5b5061036a611726565b34801561080c57600080fd5b50610353600160a060020a036004803582169160248035909116916044359160643590810191013561172c565b34801561084557600080fd5b5061025d61176f565b34801561085a57600080fd5b5061035361177d565b34801561086f57600080fd5b5061073e6117e8565b34801561088457600080fd5b5061073e6117f7565b34801561089957600080fd5b5061036a611805565b3480156108ae57600080fd5b5061025d600160a060020a036004358116906024351661180b565b3480156108d557600080fd5b50610353600160a060020a0360043516611866565b3480156108f657600080fd5b50610353600435602435604435606435608435611917565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19811660009081526004602052604090205460ff165b919050565b60188054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109d25780601f106109a7576101008083540402835291602001916109d2565b820191906000526020600020905b8154815290600101906020018083116109b557829003601f168201915b505050505090505b90565b6000818152600560205260408120548290600160a060020a03161515610a0257600080fd5b5050600090815260066020526040902054600160a060020a031690565b6000818152600560205260408120548290600160a060020a031633811480610a6a5750600160a060020a038116600090815260086020908152604080832033845290915290205460ff165b1515610a7557600080fd5b6000848152600560205260409020548490600160a060020a03161515610a9a57600080fd5b600085815260056020526040902054600160a060020a0390811694508616841415610ac457600080fd5b600085815260066020526040902054600160a060020a0316158015610af05750600160a060020a038616155b15610afa57600080fd5b6000858152600660209081526040918290208054600160a060020a031916600160a060020a038a8116918217909255835189815293519093918816927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3505050505050565b60135481565b601754610100900460ff1615610b8157600080fd5b600154604160ff90911610610b9557600080fd5b601154341480610bb2575060175462010000900460ff1615156001145b1515610bbd57600080fd5b610bc5611965565b610bcd6119b4565b565b60606000808460ff16118015610be9575060968460ff1611155b1515610bf457600080fd5b60008360ff16118015610c0b575060b08360ff1611155b1515610c1657600080fd5b5060005b600954811015610e3957846040518082805190602001908083835b60208310610c545780518252601f199092019160209182019101610c35565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091206009805491945092508491508110610c9157fe5b90600052602060002090600302016000016040518082805460018160011615610100020316600290048015610cfd5780601f10610cdb576101008083540402835291820191610cfd565b820191906000526020600020905b815481529060010190602001808311610ce9575b5050915050604051809103902060001916148015610d4257508360ff16600982815481101515610d2957fe5b600091825260209091206001600390920201015460ff16145b8015610d7a57508260ff16600982815481101515610d5c57fe5b6000918252602090912060039091020160010154610100900460ff16145b15610e31576009805482908110610d8d57fe5b600091825260209182902060026003909202018101805460408051601f600019610100600186161502019093169490940491820185900485028401850190528083529192909190830182828015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b50505050509150610e99565b600101610c1a565b606060405190810160405280602781526020017f5665727365206e6f74206d696e7465642c206f7220696e76616c69642061726781526020017f756d656e74732e0000000000000000000000000000000000000000000000000081525091505b509392505050565b60095490565b60125481565b6000818152600560205260408120548290600160a060020a031633811480610eeb5750600082815260066020526040902054600160a060020a031633145b80610f195750600160a060020a038116600090815260086020908152604080832033845290915290205460ff165b1515610f2457600080fd5b6000848152600560205260409020548490600160a060020a03161515610f4957600080fd5b600085815260056020526040902054600160a060020a03908116945087168414610f7257600080fd5b600160a060020a0386161515610f8757600080fd5b610f918686611c55565b50505050505050565b610fa2611cdb565b600160a060020a03163314610fb657600080fd5b6000828152600f602052604081205460ff166003811115610fd357fe5b141561100857610fe38282611ed0565b6017805460ff19811660ff918216600019019091161790556110036120a9565b611095565b60016000838152600f602052604090205460ff16600381111561102757fe5b141561103757610fe382826120c2565b60026000838152600f602052604090205460ff16600381111561105657fe5b141561106657610fe38282612100565b60036000838152600f602052604090205460ff16600381111561108557fe5b141561022157610fe3828261212d565b5050565b6003546401000000009004600160a060020a031633146110b857600080fd5b60035460c060020a900460ff1615156110d057600080fd5b6001805460ff191660ff89161790556110eb600287876140bf565b506003805460ff191660ff9586161761ff001916610100948616949094029390931762ff0000191662010000928516929092029190911763ff000000191663010000009190931602919091179055505050565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156111c15780601f10611196576101008083540402835291602001916111c1565b820191906000526020600020905b8154815290600101906020018083116111a457829003601f168201915b505050505081565b505050565b6003546401000000009004600160a060020a031633146111ed57600080fd5b60035460c060020a900460ff16151561120557600080fd5b6003805478ff000000000000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b6111c98383836020604051908101604052806000815250612162565b60035460c060020a900460ff1681565b6003546000906401000000009004600160a060020a031633146112a057600080fd5b503031600081116112b057600080fd5b600354604051640100000000909104600160a060020a0316906108fc8315029083906000818181858888f1505050505050565b600081815260056020526040902054600160a060020a031680151561094157600080fd5b6003546401000000009004600160a060020a0316331461132657600080fd5b60035460c060020a900460ff16151561133e57600080fd5b858560098981548110151561134f57fe5b6000918252602090912061136993600390920201916140bf565b508360098881548110151561137a57fe5b906000526020600020906003020160010160006101000a81548160ff021916908360ff160217905550826009888154811015156113b357fe5b906000526020600020906003020160010160016101000a81548160ff021916908360ff16021790555081816009898154811015156113ed57fe5b9060005260206000209060030201600201919061140b9291906140bf565b5050505050505050565b60155481565b6000600160a060020a038216151561143257600080fd5b50600160a060020a031660009081526007602052604090205490565b6003546401000000009004600160a060020a0316331461146d57600080fd5b60035460c060020a900460ff16151561148557600080fd5b61148e816123eb565b50565b6003546401000000009004600160a060020a031633146114b057600080fd5b60035460c060020a900460ff1615156114c857600080fd5b6111c9600083836140bf565b6003546401000000009004600160a060020a031633146114f357600080fd5b60035460c060020a900460ff161561150a57600080fd5b6003805478ff000000000000000000000000000000000000000000000000191660c060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b3031805b5090565b6003546401000000009004600160a060020a031681565b6003546000906401000000009004600160a060020a0316331461159e57600080fd5b60035460c060020a900460ff1615156115b657600080fd5b6064670de0b6b3a76400008302046011555050565b60198054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109d25780601f106109a7576101008083540402835291602001916109d2565b60015460ff1681565b6003546301000000900460ff1681565b60175460ff1681565b60115481565b600160a060020a038216151561166957600080fd5b336000818152600860209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b60408051808201909152601981527f5375636365737366756c6c792061646465642066756e64732e00000000000000602082015290565b60035460ff1681565b60175462010000900460ff1681565b60165481565b61176885858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843750612162945050505050565b5050505050565b601754610100900460ff1681565b6003546401000000009004600160a060020a0316331461179c57600080fd5b601754610100900460ff1615156117b257600080fd5b6017805461ffff191690556040517f6426a220e8910820230d4f2e29cc2bee7c13058ff2524cbcc4d823ba49aa2f6690600090a1565b60035462010000900460ff1681565b600354610100900460ff1681565b60145481565b6000600160a060020a038316151561182257600080fd5b600160a060020a038216151561183757600080fd5b50600160a060020a03918216600090815260086020908152604080832093909416825291909152205460ff1690565b6003546401000000009004600160a060020a0316331461188557600080fd5b600160a060020a038116151561189a57600080fd5b600354604051600160a060020a0380841692640100000000900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360038054600160a060020a039092166401000000000277ffffffffffffffffffffffffffffffffffffffff0000000019909216919091179055565b6003546401000000009004600160a060020a0316331461193657600080fd5b60035460c060020a900460ff16151561194e57600080fd5b601294909455601392909255601455601555601655565b601754610100900460ff161561197a57600080fd5b6017805461ff0019166101001790556040517fa8d1ea886eaf8bd3d113c770bf7af546123c70e235b0d036ff752d5e920a7b5690600090a1565b606060006119e060408051908101604052806004815260200160e060020a6349504653028152506125d3565b3031116119ec57600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611a725780601f10611a4757610100808354040283529160200191611a72565b820191906000526020600020905b815481529060010190602001808311611a5557829003601f168201915b50505050509150611b1d82611a9b600160009054906101000a900460ff1660010160ff1661283b565b60408051808201909152601081527f275d2f436861707465725b4069643d27000000000000000000000000000000006020820152600354611ae49062010000900460ff1661283b565b60408051808201909152600e81527f275d2f56657273655b4069643d27000000000000000000000000000000000000602082015261292e565b600354909250611b75908390611b3c906301000000900460ff1661283b565b60408051808201909152600a81527f275d2f74657874282929000000000000000000000000000000000000000000006020820152612b8f565b9150611ba360408051908101604052806004815260200160e060020a63495046530281525083601254612bc6565b6017805460ff8082166001011660ff19918216179091556000828152600f6020908152604080832080549094169093556010815290829020805433600160a060020a03199091161790558151818152808201919091527f51756572792073656e743b206177616974696e6720726573706f6e73652e2e2e8183015290519192507fd7789a3deb1d0944b7966c5d18037fc5b3a0a17236de9e7c20fe3a6345167295916060918190039190910190a15050565b600081815260056020526040902054600160a060020a0316611c778183612fc9565b611c818183613026565b611c8b83836130cf565b82600160a060020a031681600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050565b600a54600090600160a060020a03161580611d085750600a54611d0690600160a060020a0316613153565b155b15611d1957611d176000613157565b505b600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611d6c57600080fd5b505af1158015611d80573d6000803e3d6000fd5b505050506040513d6020811015611d9657600080fd5b5051600b54600160a060020a03908116911614611e4c57600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e0057600080fd5b505af1158015611e14573d6000803e3d6000fd5b505050506040513d6020811015611e2a57600080fd5b5051600b8054600160a060020a031916600160a060020a039092169190911790555b600b60009054906101000a9004600160a060020a0316600160a060020a031663c281d19e6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e9f57600080fd5b505af1158015611eb3573d6000803e3d6000fd5b505050506040513d6020811015611ec957600080fd5b5051905090565b611ed8614139565b604080516002805460a06020601f600019610100600186161502019093168490049283018190040284018101909452608083018181526000948493919290840182828015611f675780601f10611f3c57610100808354040283529160200191611f67565b820191906000526020600020905b815481529060010190602001808311611f4a57829003601f168201915b505050918352505060035460ff6201000082048116602084015263010000009091041660408201526060908101859052810151519092501515611fa657fe5b60098054600181810180845560009390935284518051919392869260039091027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0191611ff891839160200190614168565b50602082810151600183018054604086015160ff9081166101000261ff00199190941660ff199092169190911716919091179055606083015180516120439260028501920190614168565b505050600086815260106020526040902054919003915061206d90600160a060020a031682613167565b6000848152600f60209081526040808320805460ff19169055601090915290208054600160a060020a03191690556120a36133cf565b50505050565b60175460ff1615156120bd576120bd6133d7565b610bcd565b6120cb81613449565b6003805460ff929092166101000261ff00199092169190911790556000828152600f60205260409020805460ff191690555050565b8051612113906002906020840190614168565b50506000908152600f60205260409020805460ff19169055565b61213681613449565b6003805460ff9290921660ff199283161790556000838152600f60205260409020805490911690555050565b60008281526005602052604081205481908490600160a060020a0316338114806121a25750600082815260066020526040902054600160a060020a031633145b806121d05750600160a060020a038116600090815260086020908152604080832033845290915290205460ff165b15156121db57600080fd5b6000868152600560205260409020548690600160a060020a0316151561220057600080fd5b600087815260056020526040902054600160a060020a0390811695508916851461222957600080fd5b600160a060020a038816151561223e57600080fd5b6122488888611c55565b61225a88600160a060020a0316613456565b156123e05787600160a060020a031663f0b9e5ba8a89896040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156122de5781810151838201526020016122c6565b50505050905090810190601f16801561230b5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561232c57600080fd5b505af1158015612340573d6000803e3d6000fd5b505050506040513d602081101561235657600080fd5b5051604080517f6f6e455243373231526563656976656428616464726573732c75696e7432353681527f2c62797465732900000000000000000000000000000000000000000000000000602082015290519081900360270190209094507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff198086169116146123e057600080fd5b505050505050505050565b600a54600160a060020a031615806124155750600a5461241390600160a060020a0316613153565b155b15612426576124246000613157565b505b600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561247957600080fd5b505af115801561248d573d6000803e3d6000fd5b505050506040513d60208110156124a357600080fd5b5051600b54600160a060020a0390811691161461255957600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561250d57600080fd5b505af1158015612521573d6000803e3d6000fd5b505050506040513d602081101561253757600080fd5b5051600b8054600160a060020a031916600160a060020a039092169190911790555b600b54604080517fca6ad1e4000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a039092169163ca6ad1e49160248082019260009290919082900301818387803b1580156125bf57600080fd5b505af1158015611768573d6000803e3d6000fd5b600a54600090600160a060020a031615806126005750600a546125fe90600160a060020a0316613153565b155b156126115761260f6000613157565b505b600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561266457600080fd5b505af1158015612678573d6000803e3d6000fd5b505050506040513d602081101561268e57600080fd5b5051600b54600160a060020a0390811691161461274457600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156126f857600080fd5b505af115801561270c573d6000803e3d6000fd5b505050506040513d602081101561272257600080fd5b5051600b8054600160a060020a031916600160a060020a039092169190911790555b600b546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600160a060020a039094169363524f388993879383926044909201919085019080838360005b838110156127bd5781810151838201526020016127a5565b50505050905090810190601f1680156127ea5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561280957600080fd5b505af115801561281d573d6000803e3d6000fd5b505050506040513d602081101561283357600080fd5b505192915050565b606060008082818515156128845760408051808201909152600181527f300000000000000000000000000000000000000000000000000000000000000060208201529450612925565b8593505b831561289f57600190920191600a84049350612888565b826040519080825280601f01601f1916602001820160405280156128cd578160200160208202803883390190505b5091505060001982015b851561292157815160001982019160f860020a6030600a8a0601029184919081106128fe57fe5b906020010190600160f860020a031916908160001a905350600a860495506128d7565b8194505b50505050919050565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f191660200182016040528015612987578160200160208202803883390190505b50935083925060009150600090505b88518110156129f45788818151811015156129ad57fe5b90602001015160f860020a900460f860020a0283838060010194508151811015156129d457fe5b906020010190600160f860020a031916908160001a905350600101612996565b5060005b8751811015612a56578781815181101515612a0f57fe5b90602001015160f860020a900460f860020a028383806001019450815181101515612a3657fe5b906020010190600160f860020a031916908160001a9053506001016129f8565b5060005b8651811015612ab8578681815181101515612a7157fe5b90602001015160f860020a900460f860020a028383806001019450815181101515612a9857fe5b906020010190600160f860020a031916908160001a905350600101612a5a565b5060005b8551811015612b1a578581815181101515612ad357fe5b90602001015160f860020a900460f860020a028383806001019450815181101515612afa57fe5b906020010190600160f860020a031916908160001a905350600101612abc565b5060005b8451811015612b7c578481815181101515612b3557fe5b90602001015160f860020a900460f860020a028383806001019450815181101515612b5c57fe5b906020010190600160f860020a031916908160001a905350600101612b1e565b50909d9c50505050505050505050505050565b6060612bbe8484846020604051908101604052806000815250602060405190810160405280600081525061292e565b949350505050565b600a546000908190600160a060020a03161580612bf55750600a54612bf390600160a060020a0316613153565b155b15612c0657612c046000613157565b505b600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015612c5957600080fd5b505af1158015612c6d573d6000803e3d6000fd5b505050506040513d6020811015612c8357600080fd5b5051600b54600160a060020a03908116911614612d3957600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015612ced57600080fd5b505af1158015612d01573d6000803e3d6000fd5b505050506040513d6020811015612d1757600080fd5b5051600b8054600160a060020a031916600160a060020a039092169190911790555b600b54604080517f2ef3accc0000000000000000000000000000000000000000000000000000000081526024810186905260048101918252875160448201528751600160a060020a0390931692632ef3accc9289928892829160640190602086019080838360005b83811015612db9578181015183820152602001612da1565b50505050905090810190601f168015612de65780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612e0657600080fd5b505af1158015612e1a573d6000803e3d6000fd5b505050506040513d6020811015612e3057600080fd5b50519050670de0b6b3a76400003a840201811115612e515760009150610e99565b600b546040517fc51be90f00000000000000000000000000000000000000000000000000000000815260006004820181815260648301879052608060248401908152895160848501528951600160a060020a039095169463c51be90f948794938c938c938c93604481019160a49091019060208801908083838c5b83811015612ee4578181015183820152602001612ecc565b50505050905090810190601f168015612f115780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015612f44578181015183820152602001612f2c565b50505050905090810190601f168015612f715780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015612f9357600080fd5b505af1158015612fa7573d6000803e3d6000fd5b50505050506040513d6020811015612fbe57600080fd5b505195945050505050565b60008181526006602090815260408083208054600160a060020a031916905580518481529051600160a060020a038616927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35050565b600081815260056020526040902054600160a060020a0383811691161461304c57600080fd5b600160a060020a0382166000908152600760205260408120541161306c57fe5b600160a060020a03821660009081526007602052604090205461309690600163ffffffff61345e16565b600160a060020a039092166000908152600760209081526040808320949094559181526005909152208054600160a060020a0319169055565b600081815260056020526040902054600160a060020a0316156130f157600080fd5b60008181526005602090815260408083208054600160a060020a031916600160a060020a03871690811790915583526007909152902054613133906001613470565b600160a060020a0390921660009081526007602052604090209190915550565b3b90565b6000613161613486565b92915050565b600160a060020a038216151561317957fe5b600081815260056020526040902054600160a060020a03161561319857fe5b6131a282826137ae565b7ffbecfb053d2f151b59371e34072d9aa8d7ec310b227c3ccce2636d0352bbf137826009838154811015156131d357fe5b90600052602060002090600302016000016009848154811015156131f357fe5b60009182526020909120600160039092020101546009805460ff909216918690811061321b57fe5b906000526020600020906003020160010160019054906101000a900460ff1660098681548110151561324957fe5b600091825260209182902060408051600160a060020a038916815260ff80881692820192909252908516606082015260a0938101848152875460026000196101006001841615020190911681900495830186905260039094029092019290920192608083019060c0840190889080156133035780601f106132d857610100808354040283529160200191613303565b820191906000526020600020905b8154815290600101906020018083116132e657829003601f168201915b50508381038252845460026000196101006001841615020190911604808252602090910190859080156133775780601f1061334c57610100808354040283529160200191613377565b820191906000526020600020905b81548152906001019060200180831161335a57829003601f168201915b505097505050505050505060405180910390a1604080518281529051600160a060020a038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610bcd6137b8565b601754610100900460ff1615156133ed57600080fd5b6017805461ff00191690556040517f6426a220e8910820230d4f2e29cc2bee7c13058ff2524cbcc4d823ba49aa2f6690600090a166d529ae9e860000303110610bcd576017805462ff0000191662010000179055610bcd6137fb565b6000613161826000613811565b6000903b1190565b60008282111561346a57fe5b50900390565b60008282018381101561347f57fe5b9392505050565b6000806134a6731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed613153565b111561351757600a8054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e6574000000000000000000000000000000000000000000602082015261350f90613983565b5060016109da565b600061353673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1613153565b111561359f57600a8054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e330000000000000000000000000000000000000000602082015261350f90613983565b60006135be73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e613153565b111561362757600a8054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e0000000000000000000000000000000000000000000000602082015261350f90613983565b600061364673146500cfd35b22e4a392fe0adc06de1a1368ed48613153565b11156136af57600a8054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b656279000000000000000000000000000000000000000000602082015261350f90613983565b60006136ce736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475613153565b11156137025750600a8054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47517905560016109da565b60006137217320e12a1f859b3feae5fb2a0a32c18f5a65555bbf613153565b11156137555750600a8054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf17905560016109da565b60006137747351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa613153565b11156137a85750600a8054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa17905560016109da565b50600090565b61109582826130cf565b60038054600160ff63010000008084048216929092018116820263ff0000001990931692909217928390556101008304821692041611156120bd576120bd613996565b613803610b6c565b6017805462ff000019169055565b6000828180805b83518110156139665783517f30000000000000000000000000000000000000000000000000000000000000009085908390811061385157fe5b90602001015160f860020a900460f860020a02600160f860020a031916101580156138c7575083517f3900000000000000000000000000000000000000000000000000000000000000908590839081106138a757fe5b90602001015160f860020a900460f860020a02600160f860020a03191611155b156139205781156138e6578515156138de57613966565b600019909501945b600a83029250603084828151811015156138fc57fe5b90602001015160f860020a900460f860020a0260f860020a9004038301925061395e565b838181518110151561392e57fe5b90602001015160f860020a900460f860020a02600160f860020a031916602e60f860020a02141561395e57600191505b600101613818565b60008611156139785785600a0a830292505b509095945050505050565b805161109590600c906020840190614168565b600380546201000063ff0000001990911663010000001781810460ff9081166001018116830262ff00001990921691909117928390558281169190920490911611156139e4576120bd6139ec565b610bcd613a77565b6003805462ff000019166201000017905560018054604160ff918216909201161015613a4457613a1a613ca9565b613a22613e2c565b613a2a613faf565b6001805460ff80821683011660ff19909116179055610bcd565b6001805460ff80821683011660ff19909116179055613a65600260006141d6565b6003805463ffffffff19169055610bcd565b60606000613aa360408051908101604052806004815260200160e060020a6349504653028152506125d3565b303111613aaf57600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015613b355780601f10613b0a57610100808354040283529160200191613b35565b820191906000526020600020905b815481529060010190602001808311613b1857829003601f168201915b50505050509150613be082613b5e600160009054906101000a900460ff1660010160ff1661283b565b60408051808201909152601081527f275d2f436861707465725b4069643d27000000000000000000000000000000006020820152600354613ba79062010000900460ff1661283b565b60408051808201909152601981527f275d2f6e756d6265724f665665727365732f7465787428292900000000000000602082015261292e565b9150613c0e60408051908101604052806004815260200160e060020a63495046530281525083601554612bc6565b6017805460ff808216600190810190911660ff19928316179092556000838152600f60205260409020805493945091921682805b0217905550604080516020808252808201527f51756572792073656e743b206177616974696e6720726573706f6e73652e2e2e8183015290517fd7789a3deb1d0944b7966c5d18037fc5b3a0a17236de9e7c20fe3a63451672959181900360600190a15050565b60606000613cd560408051908101604052806004815260200160e060020a6349504653028152506125d3565b303111613ce157600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015613d675780601f10613d3c57610100808354040283529160200191613d67565b820191906000526020600020905b815481529060010190602001808311613d4a57829003601f168201915b5050600154939550613dc493869350613d8b9250600260ff9182160116905061283b565b60408051808201909152601381527f275d2f626f6f6b4e616d652f74657874282929000000000000000000000000006020820152612b8f565b9150613df260408051908101604052806004815260200160e060020a63495046530281525083601354612bc6565b6017805460ff19808216600160ff9384168101909316179092556000838152600f6020526040902080549394506002939092169083613c42565b60606000613e5860408051908101604052806004815260200160e060020a6349504653028152506125d3565b303111613e6457600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015613eea5780601f10613ebf57610100808354040283529160200191613eea565b820191906000526020600020905b815481529060010190602001808311613ecd57829003601f168201915b5050600154939550613f4793869350613f0e9250600260ff9182160116905061283b565b60408051808201909152601b81527f275d2f6e756d6265724f6643686170746572732f7465787428292900000000006020820152612b8f565b9150613f7560408051908101604052806004815260200160e060020a63495046530281525083601454612bc6565b6017805460ff19808216600160ff9384168101909316179092556000838152600f6020526040902080549394506003939092169083613c42565b60606000613fdb60408051908101604052806004815260200160e060020a6349504653028152506125d3565b303111613fe757600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561406d5780601f106140425761010080835404028352916020019161406d565b820191906000526020600020905b81548152906001019060200180831161405057829003601f168201915b505060015493955061409193869350613b5e9250600260ff9182160116905061283b565b9150613c0e60408051908101604052806004815260200160e060020a63495046530281525083601654612bc6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106141005782800160ff1982351617855561412d565b8280016001018555821561412d579182015b8281111561412d578235825591602001919060010190614112565b50611561929150614216565b60806040519081016040528060608152602001600060ff168152602001600060ff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106141a957805160ff191683800117855561412d565b8280016001018555821561412d579182015b8281111561412d5782518255916020019190600101906141bb565b50805460018160011615610100020316600290046000825580601f106141fc575061148e565b601f01602090049060005260206000209081019061148e91905b6109da91905b80821115611561576000815560010161421c5600a165627a7a723058204a49d58521eb0da086141b84632d351539b3862277d869e706777499081999470029",
  "deployedBytecode": "0x6080604052600436106102215763ffffffff60e060020a60003504166301ffc9a7811461022657806306fdde0314610271578063081812fc146102fb578063095ea7b31461032f57806310c5cf54146103555780631249c58b1461037c578063135e85741461038457806318160ddd146103ed5780631cbd74051461040257806323b872dd1461041757806327dc297e1461044157806333b452af1461049f57806335df3bd6146104de57806338bbfa50146104f35780633f4ba83a1461058f57806342842e0e146105a45780635c975abb146105ce5780635fd8c710146105e35780636352211e146105f85780636c2b99e6146106105780636e2387f41461064f57806370a082311461066457806371c82c1414610685578063773434081461069d5780638456cb59146106bd5780638b7afe2e146106d25780638da5cb5b146106e757806391b7f5ed146106fc57806395d89b41146107145780639894eab21461072957806399118448146107545780639b2aded414610769578063a035b1fe1461077e578063a22cb46514610793578063a26759cb146107b9578063b15b5b81146107c1578063b28725e7146107d6578063b652dd3e146107eb578063b88d4fde14610800578063b9b8af0b14610839578063be0e95a51461084e578063d0c5e63a14610863578063d523be0414610878578063d94da8011461088d578063e985e9c5146108a2578063f2fde38b146108c9578063f71fe149146108ea575b600080fd5b34801561023257600080fd5b5061025d7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff196004351661090e565b604080519115158252519081900360200190f35b34801561027d57600080fd5b50610286610946565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102c05781810151838201526020016102a8565b50505050905090810190601f1680156102ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561030757600080fd5b506103136004356109dd565b60408051600160a060020a039092168252519081900360200190f35b34801561033b57600080fd5b50610353600160a060020a0360043516602435610a1f565b005b34801561036157600080fd5b5061036a610b66565b60408051918252519081900360200190f35b610353610b6c565b34801561039057600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102869436949293602493928401919081908401838280828437509497505060ff8535811696506020909501359094169350610bcf92505050565b3480156103f957600080fd5b5061036a610ea1565b34801561040e57600080fd5b5061036a610ea7565b34801561042357600080fd5b50610353600160a060020a0360043581169060243516604435610ead565b34801561044d57600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610353958335953695604494919390910191908190840183828082843750949750610f9a9650505050505050565b3480156104ab57600080fd5b5061035360ff60048035821691602480359081019201359060443581169060643581169060843581169060a43516611099565b3480156104ea57600080fd5b5061028661113e565b3480156104ff57600080fd5b5060408051602060046024803582810135601f810185900485028601850190965285855261035395833595369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506111c99650505050505050565b34801561059b57600080fd5b506103536111ce565b3480156105b057600080fd5b50610353600160a060020a0360043581169060243516604435611252565b3480156105da57600080fd5b5061025d61126e565b3480156105ef57600080fd5b5061035361127e565b34801561060457600080fd5b506103136004356112e3565b34801561061c57600080fd5b5061035360048035906024803580820192908101359160ff60443581169260643590911691608435908101910135611307565b34801561065b57600080fd5b5061036a611415565b34801561067057600080fd5b5061036a600160a060020a036004351661141b565b34801561069157600080fd5b5061035360043561144e565b3480156106a957600080fd5b506103536004803560248101910135611491565b3480156106c957600080fd5b506103536114d4565b3480156106de57600080fd5b5061036a61155d565b3480156106f357600080fd5b50610313611565565b34801561070857600080fd5b5061035360043561157c565b34801561072057600080fd5b506102866115cb565b34801561073557600080fd5b5061073e61162c565b6040805160ff9092168252519081900360200190f35b34801561076057600080fd5b5061073e611635565b34801561077557600080fd5b5061073e611645565b34801561078a57600080fd5b5061036a61164e565b34801561079f57600080fd5b50610353600160a060020a03600435166024351515611654565b6102866116d7565b3480156107cd57600080fd5b5061073e61170e565b3480156107e257600080fd5b5061025d611717565b3480156107f757600080fd5b5061036a611726565b34801561080c57600080fd5b50610353600160a060020a036004803582169160248035909116916044359160643590810191013561172c565b34801561084557600080fd5b5061025d61176f565b34801561085a57600080fd5b5061035361177d565b34801561086f57600080fd5b5061073e6117e8565b34801561088457600080fd5b5061073e6117f7565b34801561089957600080fd5b5061036a611805565b3480156108ae57600080fd5b5061025d600160a060020a036004358116906024351661180b565b3480156108d557600080fd5b50610353600160a060020a0360043516611866565b3480156108f657600080fd5b50610353600435602435604435606435608435611917565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19811660009081526004602052604090205460ff165b919050565b60188054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109d25780601f106109a7576101008083540402835291602001916109d2565b820191906000526020600020905b8154815290600101906020018083116109b557829003601f168201915b505050505090505b90565b6000818152600560205260408120548290600160a060020a03161515610a0257600080fd5b5050600090815260066020526040902054600160a060020a031690565b6000818152600560205260408120548290600160a060020a031633811480610a6a5750600160a060020a038116600090815260086020908152604080832033845290915290205460ff165b1515610a7557600080fd5b6000848152600560205260409020548490600160a060020a03161515610a9a57600080fd5b600085815260056020526040902054600160a060020a0390811694508616841415610ac457600080fd5b600085815260066020526040902054600160a060020a0316158015610af05750600160a060020a038616155b15610afa57600080fd5b6000858152600660209081526040918290208054600160a060020a031916600160a060020a038a8116918217909255835189815293519093918816927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3505050505050565b60135481565b601754610100900460ff1615610b8157600080fd5b600154604160ff90911610610b9557600080fd5b601154341480610bb2575060175462010000900460ff1615156001145b1515610bbd57600080fd5b610bc5611965565b610bcd6119b4565b565b60606000808460ff16118015610be9575060968460ff1611155b1515610bf457600080fd5b60008360ff16118015610c0b575060b08360ff1611155b1515610c1657600080fd5b5060005b600954811015610e3957846040518082805190602001908083835b60208310610c545780518252601f199092019160209182019101610c35565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091206009805491945092508491508110610c9157fe5b90600052602060002090600302016000016040518082805460018160011615610100020316600290048015610cfd5780601f10610cdb576101008083540402835291820191610cfd565b820191906000526020600020905b815481529060010190602001808311610ce9575b5050915050604051809103902060001916148015610d4257508360ff16600982815481101515610d2957fe5b600091825260209091206001600390920201015460ff16145b8015610d7a57508260ff16600982815481101515610d5c57fe5b6000918252602090912060039091020160010154610100900460ff16145b15610e31576009805482908110610d8d57fe5b600091825260209182902060026003909202018101805460408051601f600019610100600186161502019093169490940491820185900485028401850190528083529192909190830182828015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b50505050509150610e99565b600101610c1a565b606060405190810160405280602781526020017f5665727365206e6f74206d696e7465642c206f7220696e76616c69642061726781526020017f756d656e74732e0000000000000000000000000000000000000000000000000081525091505b509392505050565b60095490565b60125481565b6000818152600560205260408120548290600160a060020a031633811480610eeb5750600082815260066020526040902054600160a060020a031633145b80610f195750600160a060020a038116600090815260086020908152604080832033845290915290205460ff165b1515610f2457600080fd5b6000848152600560205260409020548490600160a060020a03161515610f4957600080fd5b600085815260056020526040902054600160a060020a03908116945087168414610f7257600080fd5b600160a060020a0386161515610f8757600080fd5b610f918686611c55565b50505050505050565b610fa2611cdb565b600160a060020a03163314610fb657600080fd5b6000828152600f602052604081205460ff166003811115610fd357fe5b141561100857610fe38282611ed0565b6017805460ff19811660ff918216600019019091161790556110036120a9565b611095565b60016000838152600f602052604090205460ff16600381111561102757fe5b141561103757610fe382826120c2565b60026000838152600f602052604090205460ff16600381111561105657fe5b141561106657610fe38282612100565b60036000838152600f602052604090205460ff16600381111561108557fe5b141561022157610fe3828261212d565b5050565b6003546401000000009004600160a060020a031633146110b857600080fd5b60035460c060020a900460ff1615156110d057600080fd5b6001805460ff191660ff89161790556110eb600287876140bf565b506003805460ff191660ff9586161761ff001916610100948616949094029390931762ff0000191662010000928516929092029190911763ff000000191663010000009190931602919091179055505050565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156111c15780601f10611196576101008083540402835291602001916111c1565b820191906000526020600020905b8154815290600101906020018083116111a457829003601f168201915b505050505081565b505050565b6003546401000000009004600160a060020a031633146111ed57600080fd5b60035460c060020a900460ff16151561120557600080fd5b6003805478ff000000000000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b6111c98383836020604051908101604052806000815250612162565b60035460c060020a900460ff1681565b6003546000906401000000009004600160a060020a031633146112a057600080fd5b503031600081116112b057600080fd5b600354604051640100000000909104600160a060020a0316906108fc8315029083906000818181858888f1505050505050565b600081815260056020526040902054600160a060020a031680151561094157600080fd5b6003546401000000009004600160a060020a0316331461132657600080fd5b60035460c060020a900460ff16151561133e57600080fd5b858560098981548110151561134f57fe5b6000918252602090912061136993600390920201916140bf565b508360098881548110151561137a57fe5b906000526020600020906003020160010160006101000a81548160ff021916908360ff160217905550826009888154811015156113b357fe5b906000526020600020906003020160010160016101000a81548160ff021916908360ff16021790555081816009898154811015156113ed57fe5b9060005260206000209060030201600201919061140b9291906140bf565b5050505050505050565b60155481565b6000600160a060020a038216151561143257600080fd5b50600160a060020a031660009081526007602052604090205490565b6003546401000000009004600160a060020a0316331461146d57600080fd5b60035460c060020a900460ff16151561148557600080fd5b61148e816123eb565b50565b6003546401000000009004600160a060020a031633146114b057600080fd5b60035460c060020a900460ff1615156114c857600080fd5b6111c9600083836140bf565b6003546401000000009004600160a060020a031633146114f357600080fd5b60035460c060020a900460ff161561150a57600080fd5b6003805478ff000000000000000000000000000000000000000000000000191660c060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b3031805b5090565b6003546401000000009004600160a060020a031681565b6003546000906401000000009004600160a060020a0316331461159e57600080fd5b60035460c060020a900460ff1615156115b657600080fd5b6064670de0b6b3a76400008302046011555050565b60198054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109d25780601f106109a7576101008083540402835291602001916109d2565b60015460ff1681565b6003546301000000900460ff1681565b60175460ff1681565b60115481565b600160a060020a038216151561166957600080fd5b336000818152600860209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b60408051808201909152601981527f5375636365737366756c6c792061646465642066756e64732e00000000000000602082015290565b60035460ff1681565b60175462010000900460ff1681565b60165481565b61176885858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843750612162945050505050565b5050505050565b601754610100900460ff1681565b6003546401000000009004600160a060020a0316331461179c57600080fd5b601754610100900460ff1615156117b257600080fd5b6017805461ffff191690556040517f6426a220e8910820230d4f2e29cc2bee7c13058ff2524cbcc4d823ba49aa2f6690600090a1565b60035462010000900460ff1681565b600354610100900460ff1681565b60145481565b6000600160a060020a038316151561182257600080fd5b600160a060020a038216151561183757600080fd5b50600160a060020a03918216600090815260086020908152604080832093909416825291909152205460ff1690565b6003546401000000009004600160a060020a0316331461188557600080fd5b600160a060020a038116151561189a57600080fd5b600354604051600160a060020a0380841692640100000000900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360038054600160a060020a039092166401000000000277ffffffffffffffffffffffffffffffffffffffff0000000019909216919091179055565b6003546401000000009004600160a060020a0316331461193657600080fd5b60035460c060020a900460ff16151561194e57600080fd5b601294909455601392909255601455601555601655565b601754610100900460ff161561197a57600080fd5b6017805461ff0019166101001790556040517fa8d1ea886eaf8bd3d113c770bf7af546123c70e235b0d036ff752d5e920a7b5690600090a1565b606060006119e060408051908101604052806004815260200160e060020a6349504653028152506125d3565b3031116119ec57600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611a725780601f10611a4757610100808354040283529160200191611a72565b820191906000526020600020905b815481529060010190602001808311611a5557829003601f168201915b50505050509150611b1d82611a9b600160009054906101000a900460ff1660010160ff1661283b565b60408051808201909152601081527f275d2f436861707465725b4069643d27000000000000000000000000000000006020820152600354611ae49062010000900460ff1661283b565b60408051808201909152600e81527f275d2f56657273655b4069643d27000000000000000000000000000000000000602082015261292e565b600354909250611b75908390611b3c906301000000900460ff1661283b565b60408051808201909152600a81527f275d2f74657874282929000000000000000000000000000000000000000000006020820152612b8f565b9150611ba360408051908101604052806004815260200160e060020a63495046530281525083601254612bc6565b6017805460ff8082166001011660ff19918216179091556000828152600f6020908152604080832080549094169093556010815290829020805433600160a060020a03199091161790558151818152808201919091527f51756572792073656e743b206177616974696e6720726573706f6e73652e2e2e8183015290519192507fd7789a3deb1d0944b7966c5d18037fc5b3a0a17236de9e7c20fe3a6345167295916060918190039190910190a15050565b600081815260056020526040902054600160a060020a0316611c778183612fc9565b611c818183613026565b611c8b83836130cf565b82600160a060020a031681600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050565b600a54600090600160a060020a03161580611d085750600a54611d0690600160a060020a0316613153565b155b15611d1957611d176000613157565b505b600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611d6c57600080fd5b505af1158015611d80573d6000803e3d6000fd5b505050506040513d6020811015611d9657600080fd5b5051600b54600160a060020a03908116911614611e4c57600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e0057600080fd5b505af1158015611e14573d6000803e3d6000fd5b505050506040513d6020811015611e2a57600080fd5b5051600b8054600160a060020a031916600160a060020a039092169190911790555b600b60009054906101000a9004600160a060020a0316600160a060020a031663c281d19e6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e9f57600080fd5b505af1158015611eb3573d6000803e3d6000fd5b505050506040513d6020811015611ec957600080fd5b5051905090565b611ed8614139565b604080516002805460a06020601f600019610100600186161502019093168490049283018190040284018101909452608083018181526000948493919290840182828015611f675780601f10611f3c57610100808354040283529160200191611f67565b820191906000526020600020905b815481529060010190602001808311611f4a57829003601f168201915b505050918352505060035460ff6201000082048116602084015263010000009091041660408201526060908101859052810151519092501515611fa657fe5b60098054600181810180845560009390935284518051919392869260039091027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0191611ff891839160200190614168565b50602082810151600183018054604086015160ff9081166101000261ff00199190941660ff199092169190911716919091179055606083015180516120439260028501920190614168565b505050600086815260106020526040902054919003915061206d90600160a060020a031682613167565b6000848152600f60209081526040808320805460ff19169055601090915290208054600160a060020a03191690556120a36133cf565b50505050565b60175460ff1615156120bd576120bd6133d7565b610bcd565b6120cb81613449565b6003805460ff929092166101000261ff00199092169190911790556000828152600f60205260409020805460ff191690555050565b8051612113906002906020840190614168565b50506000908152600f60205260409020805460ff19169055565b61213681613449565b6003805460ff9290921660ff199283161790556000838152600f60205260409020805490911690555050565b60008281526005602052604081205481908490600160a060020a0316338114806121a25750600082815260066020526040902054600160a060020a031633145b806121d05750600160a060020a038116600090815260086020908152604080832033845290915290205460ff165b15156121db57600080fd5b6000868152600560205260409020548690600160a060020a0316151561220057600080fd5b600087815260056020526040902054600160a060020a0390811695508916851461222957600080fd5b600160a060020a038816151561223e57600080fd5b6122488888611c55565b61225a88600160a060020a0316613456565b156123e05787600160a060020a031663f0b9e5ba8a89896040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156122de5781810151838201526020016122c6565b50505050905090810190601f16801561230b5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561232c57600080fd5b505af1158015612340573d6000803e3d6000fd5b505050506040513d602081101561235657600080fd5b5051604080517f6f6e455243373231526563656976656428616464726573732c75696e7432353681527f2c62797465732900000000000000000000000000000000000000000000000000602082015290519081900360270190209094507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff198086169116146123e057600080fd5b505050505050505050565b600a54600160a060020a031615806124155750600a5461241390600160a060020a0316613153565b155b15612426576124246000613157565b505b600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561247957600080fd5b505af115801561248d573d6000803e3d6000fd5b505050506040513d60208110156124a357600080fd5b5051600b54600160a060020a0390811691161461255957600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561250d57600080fd5b505af1158015612521573d6000803e3d6000fd5b505050506040513d602081101561253757600080fd5b5051600b8054600160a060020a031916600160a060020a039092169190911790555b600b54604080517fca6ad1e4000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a039092169163ca6ad1e49160248082019260009290919082900301818387803b1580156125bf57600080fd5b505af1158015611768573d6000803e3d6000fd5b600a54600090600160a060020a031615806126005750600a546125fe90600160a060020a0316613153565b155b156126115761260f6000613157565b505b600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561266457600080fd5b505af1158015612678573d6000803e3d6000fd5b505050506040513d602081101561268e57600080fd5b5051600b54600160a060020a0390811691161461274457600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156126f857600080fd5b505af115801561270c573d6000803e3d6000fd5b505050506040513d602081101561272257600080fd5b5051600b8054600160a060020a031916600160a060020a039092169190911790555b600b546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600160a060020a039094169363524f388993879383926044909201919085019080838360005b838110156127bd5781810151838201526020016127a5565b50505050905090810190601f1680156127ea5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561280957600080fd5b505af115801561281d573d6000803e3d6000fd5b505050506040513d602081101561283357600080fd5b505192915050565b606060008082818515156128845760408051808201909152600181527f300000000000000000000000000000000000000000000000000000000000000060208201529450612925565b8593505b831561289f57600190920191600a84049350612888565b826040519080825280601f01601f1916602001820160405280156128cd578160200160208202803883390190505b5091505060001982015b851561292157815160001982019160f860020a6030600a8a0601029184919081106128fe57fe5b906020010190600160f860020a031916908160001a905350600a860495506128d7565b8194505b50505050919050565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f191660200182016040528015612987578160200160208202803883390190505b50935083925060009150600090505b88518110156129f45788818151811015156129ad57fe5b90602001015160f860020a900460f860020a0283838060010194508151811015156129d457fe5b906020010190600160f860020a031916908160001a905350600101612996565b5060005b8751811015612a56578781815181101515612a0f57fe5b90602001015160f860020a900460f860020a028383806001019450815181101515612a3657fe5b906020010190600160f860020a031916908160001a9053506001016129f8565b5060005b8651811015612ab8578681815181101515612a7157fe5b90602001015160f860020a900460f860020a028383806001019450815181101515612a9857fe5b906020010190600160f860020a031916908160001a905350600101612a5a565b5060005b8551811015612b1a578581815181101515612ad357fe5b90602001015160f860020a900460f860020a028383806001019450815181101515612afa57fe5b906020010190600160f860020a031916908160001a905350600101612abc565b5060005b8451811015612b7c578481815181101515612b3557fe5b90602001015160f860020a900460f860020a028383806001019450815181101515612b5c57fe5b906020010190600160f860020a031916908160001a905350600101612b1e565b50909d9c50505050505050505050505050565b6060612bbe8484846020604051908101604052806000815250602060405190810160405280600081525061292e565b949350505050565b600a546000908190600160a060020a03161580612bf55750600a54612bf390600160a060020a0316613153565b155b15612c0657612c046000613157565b505b600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015612c5957600080fd5b505af1158015612c6d573d6000803e3d6000fd5b505050506040513d6020811015612c8357600080fd5b5051600b54600160a060020a03908116911614612d3957600a60009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015612ced57600080fd5b505af1158015612d01573d6000803e3d6000fd5b505050506040513d6020811015612d1757600080fd5b5051600b8054600160a060020a031916600160a060020a039092169190911790555b600b54604080517f2ef3accc0000000000000000000000000000000000000000000000000000000081526024810186905260048101918252875160448201528751600160a060020a0390931692632ef3accc9289928892829160640190602086019080838360005b83811015612db9578181015183820152602001612da1565b50505050905090810190601f168015612de65780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612e0657600080fd5b505af1158015612e1a573d6000803e3d6000fd5b505050506040513d6020811015612e3057600080fd5b50519050670de0b6b3a76400003a840201811115612e515760009150610e99565b600b546040517fc51be90f00000000000000000000000000000000000000000000000000000000815260006004820181815260648301879052608060248401908152895160848501528951600160a060020a039095169463c51be90f948794938c938c938c93604481019160a49091019060208801908083838c5b83811015612ee4578181015183820152602001612ecc565b50505050905090810190601f168015612f115780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015612f44578181015183820152602001612f2c565b50505050905090810190601f168015612f715780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015612f9357600080fd5b505af1158015612fa7573d6000803e3d6000fd5b50505050506040513d6020811015612fbe57600080fd5b505195945050505050565b60008181526006602090815260408083208054600160a060020a031916905580518481529051600160a060020a038616927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35050565b600081815260056020526040902054600160a060020a0383811691161461304c57600080fd5b600160a060020a0382166000908152600760205260408120541161306c57fe5b600160a060020a03821660009081526007602052604090205461309690600163ffffffff61345e16565b600160a060020a039092166000908152600760209081526040808320949094559181526005909152208054600160a060020a0319169055565b600081815260056020526040902054600160a060020a0316156130f157600080fd5b60008181526005602090815260408083208054600160a060020a031916600160a060020a03871690811790915583526007909152902054613133906001613470565b600160a060020a0390921660009081526007602052604090209190915550565b3b90565b6000613161613486565b92915050565b600160a060020a038216151561317957fe5b600081815260056020526040902054600160a060020a03161561319857fe5b6131a282826137ae565b7ffbecfb053d2f151b59371e34072d9aa8d7ec310b227c3ccce2636d0352bbf137826009838154811015156131d357fe5b90600052602060002090600302016000016009848154811015156131f357fe5b60009182526020909120600160039092020101546009805460ff909216918690811061321b57fe5b906000526020600020906003020160010160019054906101000a900460ff1660098681548110151561324957fe5b600091825260209182902060408051600160a060020a038916815260ff80881692820192909252908516606082015260a0938101848152875460026000196101006001841615020190911681900495830186905260039094029092019290920192608083019060c0840190889080156133035780601f106132d857610100808354040283529160200191613303565b820191906000526020600020905b8154815290600101906020018083116132e657829003601f168201915b50508381038252845460026000196101006001841615020190911604808252602090910190859080156133775780601f1061334c57610100808354040283529160200191613377565b820191906000526020600020905b81548152906001019060200180831161335a57829003601f168201915b505097505050505050505060405180910390a1604080518281529051600160a060020a038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610bcd6137b8565b601754610100900460ff1615156133ed57600080fd5b6017805461ff00191690556040517f6426a220e8910820230d4f2e29cc2bee7c13058ff2524cbcc4d823ba49aa2f6690600090a166d529ae9e860000303110610bcd576017805462ff0000191662010000179055610bcd6137fb565b6000613161826000613811565b6000903b1190565b60008282111561346a57fe5b50900390565b60008282018381101561347f57fe5b9392505050565b6000806134a6731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed613153565b111561351757600a8054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e6574000000000000000000000000000000000000000000602082015261350f90613983565b5060016109da565b600061353673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1613153565b111561359f57600a8054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e330000000000000000000000000000000000000000602082015261350f90613983565b60006135be73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e613153565b111561362757600a8054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e0000000000000000000000000000000000000000000000602082015261350f90613983565b600061364673146500cfd35b22e4a392fe0adc06de1a1368ed48613153565b11156136af57600a8054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b656279000000000000000000000000000000000000000000602082015261350f90613983565b60006136ce736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475613153565b11156137025750600a8054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47517905560016109da565b60006137217320e12a1f859b3feae5fb2a0a32c18f5a65555bbf613153565b11156137555750600a8054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf17905560016109da565b60006137747351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa613153565b11156137a85750600a8054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa17905560016109da565b50600090565b61109582826130cf565b60038054600160ff63010000008084048216929092018116820263ff0000001990931692909217928390556101008304821692041611156120bd576120bd613996565b613803610b6c565b6017805462ff000019169055565b6000828180805b83518110156139665783517f30000000000000000000000000000000000000000000000000000000000000009085908390811061385157fe5b90602001015160f860020a900460f860020a02600160f860020a031916101580156138c7575083517f3900000000000000000000000000000000000000000000000000000000000000908590839081106138a757fe5b90602001015160f860020a900460f860020a02600160f860020a03191611155b156139205781156138e6578515156138de57613966565b600019909501945b600a83029250603084828151811015156138fc57fe5b90602001015160f860020a900460f860020a0260f860020a9004038301925061395e565b838181518110151561392e57fe5b90602001015160f860020a900460f860020a02600160f860020a031916602e60f860020a02141561395e57600191505b600101613818565b60008611156139785785600a0a830292505b509095945050505050565b805161109590600c906020840190614168565b600380546201000063ff0000001990911663010000001781810460ff9081166001018116830262ff00001990921691909117928390558281169190920490911611156139e4576120bd6139ec565b610bcd613a77565b6003805462ff000019166201000017905560018054604160ff918216909201161015613a4457613a1a613ca9565b613a22613e2c565b613a2a613faf565b6001805460ff80821683011660ff19909116179055610bcd565b6001805460ff80821683011660ff19909116179055613a65600260006141d6565b6003805463ffffffff19169055610bcd565b60606000613aa360408051908101604052806004815260200160e060020a6349504653028152506125d3565b303111613aaf57600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015613b355780601f10613b0a57610100808354040283529160200191613b35565b820191906000526020600020905b815481529060010190602001808311613b1857829003601f168201915b50505050509150613be082613b5e600160009054906101000a900460ff1660010160ff1661283b565b60408051808201909152601081527f275d2f436861707465725b4069643d27000000000000000000000000000000006020820152600354613ba79062010000900460ff1661283b565b60408051808201909152601981527f275d2f6e756d6265724f665665727365732f7465787428292900000000000000602082015261292e565b9150613c0e60408051908101604052806004815260200160e060020a63495046530281525083601554612bc6565b6017805460ff808216600190810190911660ff19928316179092556000838152600f60205260409020805493945091921682805b0217905550604080516020808252808201527f51756572792073656e743b206177616974696e6720726573706f6e73652e2e2e8183015290517fd7789a3deb1d0944b7966c5d18037fc5b3a0a17236de9e7c20fe3a63451672959181900360600190a15050565b60606000613cd560408051908101604052806004815260200160e060020a6349504653028152506125d3565b303111613ce157600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015613d675780601f10613d3c57610100808354040283529160200191613d67565b820191906000526020600020905b815481529060010190602001808311613d4a57829003601f168201915b5050600154939550613dc493869350613d8b9250600260ff9182160116905061283b565b60408051808201909152601381527f275d2f626f6f6b4e616d652f74657874282929000000000000000000000000006020820152612b8f565b9150613df260408051908101604052806004815260200160e060020a63495046530281525083601354612bc6565b6017805460ff19808216600160ff9384168101909316179092556000838152600f6020526040902080549394506002939092169083613c42565b60606000613e5860408051908101604052806004815260200160e060020a6349504653028152506125d3565b303111613e6457600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015613eea5780601f10613ebf57610100808354040283529160200191613eea565b820191906000526020600020905b815481529060010190602001808311613ecd57829003601f168201915b5050600154939550613f4793869350613f0e9250600260ff9182160116905061283b565b60408051808201909152601b81527f275d2f6e756d6265724f6643686170746572732f7465787428292900000000006020820152612b8f565b9150613f7560408051908101604052806004815260200160e060020a63495046530281525083601454612bc6565b6017805460ff19808216600160ff9384168101909316179092556000838152600f6020526040902080549394506003939092169083613c42565b60606000613fdb60408051908101604052806004815260200160e060020a6349504653028152506125d3565b303111613fe757600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561406d5780601f106140425761010080835404028352916020019161406d565b820191906000526020600020905b81548152906001019060200180831161405057829003601f168201915b505060015493955061409193869350613b5e9250600260ff9182160116905061283b565b9150613c0e60408051908101604052806004815260200160e060020a63495046530281525083601654612bc6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106141005782800160ff1982351617855561412d565b8280016001018555821561412d579182015b8281111561412d578235825591602001919060010190614112565b50611561929150614216565b60806040519081016040528060608152602001600060ff168152602001600060ff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106141a957805160ff191683800117855561412d565b8280016001018555821561412d579182015b8281111561412d5782518255916020019190600101906141bb565b50805460018160011615610100020316600290046000825580601f106141fc575061148e565b601f01602090049060005260206000209081019061148e91905b6109da91905b80821115611561576000815560010161421c5600a165627a7a723058204a49d58521eb0da086141b84632d351539b3862277d869e706777499081999470029",
  "sourceMap": "624:26:14:-;;;-1:-1:-1;;;;;;624:26:14;;;1918:10:4;1895:33;;2086:7;2051:42;;2139:7;2099:47;;;;2152:55;;;;2213:53;;;;2272:54;;2869:27;;;-1:-1:-1;;3798:35:4;;;517:39:3;640:8563:1;517:39:3;;640:8563:1;517:39:3;;;;;;;;;;624:26:14;;517:39:3;;:::i;:::-;-1:-1:-1;626:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;863:374:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;999:5:13;:18;;;1007:10;999:18;;;;;;;;661:31:11;-1:-1:-1;661:31:11;;;999:5:13;661:31:11;;;;;:38;;-1:-1:-1;;661:38:11;;;-1:-1:-1;661:38:11;;;;;;:31;4895:46:5;;;;;;;;;;;;;;;;;;;;4845:33;;;;;;;;;;;;;4784:44;;;;;;;;;;;;;4730:37;;;;;;;;;;;;;4663:50;;;;;;;;;;;;;;;;;;4592:54;;;;;;;;;;;;;;;;;;;4515:60;;;;;;;;;;;;;;;;;;4469:29;;;;;;;;;;;;;4421:31;;;;;;;;;;;;;4420:79;:156;:227;:294;:348;:409;:459;:522;661:31:11;4380:564:5;;;;;;;;;;;:571;;;;;;;;750:26:2;;;;;;;;;;;;;723:55;;;;;;;;;;:62;;;;;;;;855:21:3;;;;;;;;;;;;;819:19;;;;;;;;;;;;;818:59;778:101;;;;;;;;;:108;;;;;;;;;;919:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;919:83:1;:::i;:::-;-1:-1:-1;1021:14:1;:18;;-1:-1:-1;;1021:18:1;;;1058:27;;;;;;;;;;;;;;;;;;;;;;;:15;;:27;:::i;:::-;-1:-1:-1;1095:23:1;:28;;1208:22;1174:24;1121:2;-1:-1:-1;;1095:28:1;;;;;;;-1:-1:-1;;1133:31:1;;;-1:-1:-1;;1174:24:1;;;;;-1:-1:-1;;1208:22:1;;;;640:8563;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:8563:1;;;-1:-1:-1;640:8563:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "640:8563:1:-;;;;;;;;;-1:-1:-1;;;640:8563:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:176:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;861:176:11;-1:-1:-1;;861:176:11;;;;;;;;;;;;;;;;;;;;;;;986:108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;986:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;986:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10490:203:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10490:203:5;;;;;;;;;-1:-1:-1;;;;;10490:203:5;;;;;;;;;;;;;;9114:469;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9114:469:5;-1:-1:-1;;;;;9114:469:5;;;;;;;;;2099:47:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2099:47:4;;;;;;;;;;;;;;;;;;;;10832:233;;;;7415:896:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7415:896:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7415:896:1;;-1:-1:-1;;7415:896:1;;;;;;-1:-1:-1;7415:896:1;;;;;;;;;-1:-1:-1;7415:896:1;;-1:-1:-1;;;7415:896:1;930:120:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:120:2;;;;2051:42:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2051:42:4;;;;8337:362:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8337:362:5;-1:-1:-1;;;;;8337:362:5;;;;;;;;;;;;9396:899:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9396:899:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9396:899:4;;-1:-1:-1;9396:899:4;;-1:-1:-1;;;;;;;9396:899:4;5083:633:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5083:633:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1928:29:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1928:29:0;;;;5624:146:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5624:146:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5624:146:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5624:146:16;;;;-1:-1:-1;5624:146:16;-1:-1:-1;5624:146:16;;-1:-1:-1;5624:146:16;;;;;;;;-1:-1:-1;5624:146:16;;-1:-1:-1;5624:146:16;;-1:-1:-1;;;;;;;5624:146:16;1291:125:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1291:125:14;;;;7381:189:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7381:189:5;-1:-1:-1;;;;;7381:189:5;;;;;;;;;;;;624:26:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:26:14;;;;9024:172:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9024:172:1;;;;5692:209:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5692:209:5;;;;;6349:449:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6349:449:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:53:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2213:53:4;;;;5256:202:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5256:202:5;-1:-1:-1;;;;;5256:202:5;;;;;1592:174:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1592:174:1;;;;;4008:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4008:128:1;;;;;;;;;;;;1080:123:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1080:123:14;;;;8722:158:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8722:158:1;;;;510:20:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:20:13;;;;2049:190:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2049:190:1;;;;;1171:112:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1171:112:3;;;;1674:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1674:28:0;;;;;;;;;;;;;;;;;;;;;;;2092:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2092:32:0;;;;2869:27:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2869:27:4;;;;1895:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1895:33:4;;;;9995:273:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9995:273:5;-1:-1:-1;;;;;9995:273:5;;;;;;;;;8450:133:1;;;;1963:37:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1963:37:0;;;;3798:35:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3798:35:4;;;;2272:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2272:54:4;;;;6772:213:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6772:213:5;-1:-1:-1;;;;;6772:213:5;;;;;;;;;;;;;;;;;;;;;;;;;;3294:26:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3294:26:4;;;;7950:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7950:154:4;;;;2052:34:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2052:34:0;;;;2006:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2006:40:0;;;;2152:55:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2152:55:4;;;;10913:280:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10913:280:5;-1:-1:-1;;;;;10913:280:5;;;;;;;;;;1360:221:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1360:221:13;-1:-1:-1;;;;;1360:221:13;;;;;2875:644:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2875:644:1;;;;;;;;;;;;;861:176:11;-1:-1:-1;;997:33:11;;970:4;997:33;;;:19;:33;;;;;;;;861:176;;;;:::o;986:108:3:-;1078:9;1071:16;;;;;;;;-1:-1:-1;;1071:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:6;;1071:16;;1078:9;;1071:16;;1078:9;1071:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:108;;:::o;10490:203:5:-;10627:7;4208:25;;;:12;:25;;;;;;10597:11;;-1:-1:-1;;;;;4208:25:5;:39;;4200:48;;;;;;-1:-1:-1;;10657:29:5;;;;:16;:29;;;;;;-1:-1:-1;;;;;10657:29:5;;10490:203::o;9114:469::-;9290:18;3387:25;;;:12;:25;;;;;;9229:11;;-1:-1:-1;;;;;3387:25:5;3444:10;3430:24;;;:68;;-1:-1:-1;;;;;;3458:28:5;;;;;;:16;:28;;;;;;;;3487:10;3458:40;;;;;;;;;;3430:68;3422:77;;;;;;;;4245:1;4208:25;;;:12;:25;;;;;;9263:11;;-1:-1:-1;;;;;4208:25:5;:39;;4200:48;;;;;;9311:25;;;;:12;:25;;;;;;-1:-1:-1;;;;;9311:25:5;;;;-1:-1:-1;9354:23:5;;;;;9346:32;;;;;;9439:1;9398:29;;;:16;:29;;;;;;-1:-1:-1;;;;;9398:29:5;:43;:70;;;;-1:-1:-1;;;;;;9445:23:5;;;9398:70;9396:73;9388:82;;;;;;9481:29;;;;:16;:29;;;;;;;;;:41;;-1:-1:-1;;;;;;9481:41:5;-1:-1:-1;;;;;9481:41:5;;;;;;;;;9532:44;;;;;;;9481:41;;9532:44;;;;;;;;;;;;3509:1;9114:469;;;;;:::o;2099:47:4:-;;;;:::o;10832:233::-;5614:6;;;;;;;5613:7;5605:16;;;;;;5210:14;;1412:2:0;5210:27:4;:14;;;:27;5202:36;;;;;;10960:5;;10947:9;:18;:45;;;-1:-1:-1;10969:15:4;;;;;;;:23;;10988:4;10969:23;10947:45;10939:54;;;;;;;;11012:6;:4;:6::i;:::-;11037:21;:19;:21::i;:::-;10832:233::o;7415:896:1:-;7557:6;7883:9;7689:1;7678:8;:12;;;7677:35;;;;;7708:3;7696:8;:15;;;;7677:35;7669:44;;;;;;;;7838:1;7829:6;:10;;;7828:31;;;;;7855:3;7845:6;:13;;;;7828:31;7820:40;;;;;;;;-1:-1:-1;7895:1:1;7879:367;7902:6;:13;7898:17;;7879:367;;;8082:5;8072:16;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;8072:16:1;;;;;;;;;;8049:6;:9;;8072:16;;-1:-1:-1;8049:6:1;-1:-1:-1;8056:1:1;;-1:-1:-1;8049:9:1;;;;;;;;;;;;;;;;:18;;8039:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:49;;;;:103;;;;;8134:8;8107:35;;:6;8114:1;8107:9;;;;;;;;;;;;;;;;;;:23;:9;;;;;:23;;;;:35;8039:103;:153;;;;;8186:6;8161:31;;:6;8168:1;8161:9;;;;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;:31;8039:153;8036:199;;;8216:6;:9;;8223:1;;8216:9;;;;;;;;;;;;;;;:19;:9;;;;;:19;;8209:26;;;;;;-1:-1:-1;;8209:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8216:19;;8209:26;;;8216:19;8209:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8036:199;7917:3;;7879:367;;;8256:48;;;;;;;;;;;;;;;;;;;;;;;;;7415:896;;;;;;;:::o;930:120:2:-;1030:6;:13;930:120;:::o;2051:42:4:-;;;;:::o;8337:362:5:-;8534:18;3766:25;;;:12;:25;;;;;;8473:11;;-1:-1:-1;;;;;3766:25:5;3836:10;3822:24;;;:83;;-1:-1:-1;3862:29:5;;;;:16;:29;;;;;;-1:-1:-1;;;;;3862:29:5;3895:10;3862:43;3822:83;:139;;;-1:-1:-1;;;;;;3921:28:5;;;;;;:16;:28;;;;;;;;3950:10;3921:40;;;;;;;;;;3822:139;3801:174;;;;;;;;4245:1;4208:25;;;:12;:25;;;;;;8507:11;;-1:-1:-1;;;;;4208:25:5;:39;;4200:48;;;;;;8555:25;;;;:12;:25;;;;;;-1:-1:-1;;;;;8555:25:5;;;;-1:-1:-1;8598:19:5;;;;8590:28;;;;;;-1:-1:-1;;;;;8636:17:5;;;;8628:26;;;;;;8665:27;8675:3;8680:11;8665:9;:27::i;:::-;3985:1;8337:362;;;;;;:::o;9396:899:4:-;9520:20;:18;:20::i;:::-;-1:-1:-1;;;;;9506:34:4;:10;:34;9498:43;;;;;;9585:19;9563:18;;;:11;:18;;;;;;;;:41;;;;;;;;;9560:729;;;9620:31;9636:5;9643:7;9620:15;:31::i;:::-;9667:10;9665:12;;-1:-1:-1;;9665:12:4;;;;;;-1:-1:-1;;9665:12:4;;;;;;;9691:15;:13;:15::i;:::-;9560:729;;;9748:28;9726:18;;;;:11;:18;;;;;;;;:50;;;;;;;;;9723:566;;;9792:36;9813:5;9820:7;9792:20;:36::i;9723:566::-;9925:23;9903:18;;;;:11;:18;;;;;;;;:45;;;;;;;;;9900:389;;;9964:31;9980:5;9987:7;9964:15;:31::i;9900:389::-;10092:32;10070:18;;;;:11;:18;;;;;;;;:54;;;;;;;;;10067:222;;;10140:39;10164:5;10171:7;10140:23;:39::i;10067:222::-;9396:899;;:::o;5083:633:1:-;1163:5:13;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;970:6:14;;-1:-1:-1;;;970:6:14;;;;962:15;;;;;;;;5403:14:1;:32;;-1:-1:-1;;5403:32:1;;;;;;;5445:34;:15;5463:16;;5445:34;:::i;:::-;-1:-1:-1;5489:23:1;:50;;-1:-1:-1;;5489:50:1;;;;;;-1:-1:-1;;5549:56:1;5489:50;5549:56;;;;;;;;;;;-1:-1:-1;;5615:44:1;;;;;;;;;;;;;-1:-1:-1;;5669:40:1;;;;;;;;;;;;;-1:-1:-1;;;5083:633:1:o;1928:29:0:-;;;;;;;;;;;;;;-1:-1:-1;;1928:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5624:146:16:-;;;;:::o;1291:125:14:-;1163:5:13;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;970:6:14;;-1:-1:-1;;;970:6:14;;;;962:15;;;;;;;;1376:6;:14;;-1:-1:-1;;1376:14:14;;;1400:9;;;;1385:5;;1400:9;1291:125::o;7381:189:5:-;7517:46;7535:5;7542:3;7547:11;7517:46;;;;;;;;;;;;;:17;:46::i;624:26:14:-;;;-1:-1:-1;;;624:26:14;;;;;:::o;9024:172:1:-;1163:5:13;;9100:15:1;;1163:5:13;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;-1:-1:-1;9118:4:1;:12;9158:1;9148:11;;9140:20;;;;;;9170:5;;:19;;:5;;;;-1:-1:-1;;;;;9170:5:1;;:19;;;;;;;;;;;;:5;:19;;-1:-1:-1;;;;;;9024:172:1:o;5692:209:5:-;5791:14;5830:25;;;:12;:25;;;;;;-1:-1:-1;;;;;5830:25:5;5873:20;;;5865:29;;;;;6349:449:1;1163:5:13;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;970:6:14;;-1:-1:-1;;;970:6:14;;;;962:15;;;;;;;;6614:9:1;;6583:6;6590:11;6583:19;;;;;;;;;;;;;;;;;;:40;;:19;;;;;;:40;:::i;:::-;;6669:14;6633:6;6640:11;6633:19;;;;;;;;;;;;;;;;;;;;:33;;;:50;;;;;;;;;;;;;;;;;;6727:12;6693:6;6700:11;6693:19;;;;;;;;;;;;;;;;;;;;:31;;;:46;;;;;;;;;;;;;;;;;;6781:10;;6749:6;6756:11;6749:19;;;;;;;;;;;;;;;;;;;;:29;;:42;;;;;;;:::i;:::-;;6349:449;;;;;;;:::o;2213:53:4:-;;;;:::o;5256:202:5:-;5352:7;-1:-1:-1;;;;;5383:20:5;;;;5375:29;;;;;;-1:-1:-1;;;;;;5421:30:5;;;;;:22;:30;;;;;;;5256:202::o;1592:174:1:-;1163:5:13;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;970:6:14;;-1:-1:-1;;;970:6:14;;;;962:15;;;;;;;;1722:37:1;1749:9;1722:26;:37::i;:::-;1592:174;:::o;4008:128::-;1163:5:13;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;970:6:14;;-1:-1:-1;;;970:6:14;;;;962:15;;;;;;;;4119:10:1;:3;4125:4;;4119:10;:::i;1080:123:14:-;1163:5:13;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;802:6:14;;-1:-1:-1;;;802:6:14;;;;801:7;793:16;;;;;;1166:6;:13;;-1:-1:-1;;1166:13:14;-1:-1:-1;;;1166:13:14;;;1189:7;;;;1166:13;;1189:7;1080:123::o;8722:158:1:-;8837:4;:12;;8722:158;;;:::o;510:20:13:-;;;;;;-1:-1:-1;;;;;510:20:13;;:::o;2049:190:1:-;1163:5:13;;2165:16:1;;1163:5:13;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;970:6:14;;-1:-1:-1;;;970:6:14;;;;962:15;;;;;;;;2203:3:1;2184:7;:16;;:22;2216:5;:16;-1:-1:-1;;2049:190:1:o;1171:112:3:-;1265:11;1258:18;;;;;;;;-1:-1:-1;;1258:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:6;;1258:18;;1265:11;;1258:18;;1265:11;1258:18;;;;;;;;;;;;;;;;;;;;;;;;1674:28:0;;;;;;:::o;2092:32::-;;;;;;;;;:::o;2869:27:4:-;;;;;;:::o;1895:33::-;;;;:::o;9995:273:5:-;-1:-1:-1;;;;;10118:23:5;;;;10110:32;;;;;;10169:10;10152:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;10152:39:5;;;;;;;;;;;;:51;;-1:-1:-1;;10152:51:5;;;;;;;;;;10213:48;;;;;;;10152:39;;10169:10;10213:48;;;;;;;;;;;9995:273;;:::o;8450:133:1:-;8542:34;;;;;;;;;;;;;;;;;8450:133;:::o;1963:37:0:-;;;;;;:::o;3798:35:4:-;;;;;;;;;:::o;2272:54::-;;;;:::o;6772:213:5:-;6929:49;6947:5;6954:3;6959:11;6972:5;;6929:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6929:17:5;;-1:-1:-1;;;;;6929:49:5:i;:::-;6772:213;;;;;:::o;3294:26:4:-;;;;;;;;;:::o;7950:154::-;1163:5:13;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;5880:6:4;;;;;;;5872:15;;;;;;;;8041:6;:14;;-1:-1:-1;;8065:14:4;;;8089:8;;;;8050:5;;8089:8;7950:154::o;2052:34:0:-;;;;;;;;;:::o;2006:40::-;;;;;;;;;:::o;2152:55:4:-;;;;:::o;10913:280:5:-;11043:4;-1:-1:-1;;;;;11071:20:5;;;;11063:29;;;;;;-1:-1:-1;;;;;11110:23:5;;;;11102:32;;;;;;-1:-1:-1;;;;;;11151:24:5;;;;;;;:16;:24;;;;;;;;:35;;;;;;;;;;;;;;;10913:280::o;1360:221:13:-;1163:5;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;-1:-1:-1;;;;;1475:23:13;;;;1467:32;;;;;;1530:5;;1509:38;;-1:-1:-1;;;;;1509:38:13;;;;1530:5;;;;;1509:38;;;;;1557:5;:17;;-1:-1:-1;;;;;1557:17:13;;;;;-1:-1:-1;;1557:17:13;;;;;;;;;1360:221::o;2875:644:1:-;1163:5:13;;;;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;970:6:14;;-1:-1:-1;;;970:6:14;;;;962:15;;;;;;;;3200:17:1;:38;;;;3248:22;:48;;;;3306:30;:64;3380:28;:60;3450:29;:62;2875:644::o;6160:105:4:-;5614:6;;;;;;;5613:7;5605:16;;;;;;6229:6;:13;;-1:-1:-1;;6229:13:4;;;;;6252:6;;;;6229:13;;6252:6;6160:105::o;18106:756::-;18236:19;18617:10;18191:25;;;;;;;;;;;;;;;-1:-1:-1;;;;;18191:25:4;;;:17;:25::i;:::-;18176:4;:12;:40;18168:49;;;;;;18258:3;18236:25;;;;;;;;;;;;;-1:-1:-1;;18236:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;18258:3;18236:25;;18258:3;18236:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18288:186;18311:5;18330:28;18339:14;;;;;;;;;;;18356:1;18339:18;18330:28;;:8;:28::i;:::-;18288:186;;;;;;;;;;;;;;;;;18413:20;;18404:30;;18413:20;;;;;18404:8;:30::i;:::-;18288:186;;;;;;;;;;;;;;;;;:9;:186::i;:::-;18543:18;;18280:194;;-1:-1:-1;18492:106:4;;18280:194;;18534:28;;18543:18;;;;;18534:8;:28::i;:::-;18492:106;;;;;;;;;;;;;;;;;:9;:106::i;:::-;18484:114;;18630:48;;;;;;;;;;;;;;;-1:-1:-1;;;;;18630:48:4;;;18653:5;18660:17;;18630:14;:48::i;:::-;18690:10;18688:12;;;;;;;;;-1:-1:-1;;18688:12:4;;;;;;;-1:-1:-1;18710:15:4;;;:11;:15;;;;;;;;:37;;;;;;;;18757:13;:17;;;;;;:30;;18777:10;-1:-1:-1;;;;;;18757:30:4;;;;;;18806:49;;;;;;;;;;;;;;;;;;;18710:15;;-1:-1:-1;18806:49:4;;;;;;;;;;;;;18106:756;;:::o;12297:318:5:-;12402:12;12417:25;;;:12;:25;;;;;;-1:-1:-1;;;;;12417:25:5;12453:32;12417:25;12430:11;12453:13;:32::i;:::-;12495;12509:4;12515:11;12495:13;:32::i;:::-;12537:28;12548:3;12553:11;12537:10;:28::i;:::-;12591:3;-1:-1:-1;;;;;12576:32:5;12585:4;-1:-1:-1;;;;;12576:32:5;;12596:11;12576:32;;;;;;;;;;;;;;;;;;12297:318;;;:::o;25350:112:16:-;3249:3;;25410:7;;-1:-1:-1;;;;;3249:3:16;3241:15;;3240:49;;-1:-1:-1;3280:3:16;;3260:25;;-1:-1:-1;;;;;3280:3:16;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:16;-1:-1:-1;;;;;3373:14:16;;:16;;;;;-1:-1:-1;;;3373:16:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:16;3360:8;;-1:-1:-1;;;;;3360:8:16;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:16;-1:-1:-1;;;;;3424:14:16;;:16;;;;;-1:-1:-1;;;3424:16:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:16;3403:8;:38;;-1:-1:-1;;;;;;3403:38:16;-1:-1:-1;;;;;3403:38:16;;;;;;;;;3349:92;25435:8;;;;;;;;;-1:-1:-1;;;;;25435:8:16;-1:-1:-1;;;;;25435:18:16;;:20;;;;;-1:-1:-1;;;25435:20:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25435:20:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25435:20:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25435:20:16;;-1:-1:-1;25350:112:16;:::o;11440:596:4:-;11552:18;;:::i;:::-;11573:185;;;11603:15;11573:185;;;;;-1:-1:-1;;11573:185:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11838:18;;11573:185;;;;;;;11603:15;11573:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11573:185:4;;;-1:-1:-1;;11647:20:4;;;;;;;;11573:185;;;;11694:18;;;;;11573:185;;;;;;;;;;;11790:15;;;11784:29;11552:206;;-1:-1:-1;11784:34:4;;11777:42;;;;11859:6;27:10:-1;;11880:1:4;23:18:-1;;;45:23;;;-1:-1;11859:18:4;;;;;;;;11880:1;;23:18:-1;11871:5:4;;11859:18;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11859:18:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11859:18:4;;;;-1:-1:-1;;11859:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;11897:20:4;;;;:13;:20;;;;;;11859:22;;;;-1:-1:-1;11891:39:4;;-1:-1:-1;;;;;11897:20:4;11859:22;11891:5;:39::i;:::-;11947:18;;;;:11;:18;;;;;;;;11940:25;;-1:-1:-1;;11940:25:4;;;11982:13;:20;;;;;11975:27;;-1:-1:-1;;;;;;11975:27:4;;;12021:8;:6;:8::i;:::-;11440:596;;;;:::o;8458:152::-;8517:10;;;;:15;8514:90;;;8548:8;:6;:8::i;:::-;8514:90;;17491:239;17647:24;17656:14;17647:8;:24::i;:::-;17612:26;:60;;;;;;;;;-1:-1:-1;;17612:60:4;;;;;;;;;-1:-1:-1;17689:18:4;;;:11;:18;;;;;17682:25;;-1:-1:-1;;17682:25:4;;;17491:239;;:::o;16087:196::-;16198:27;;;;:15;;:27;;;;;:::i;:::-;-1:-1:-1;;16242:18:4;;;;:11;:18;;;;;16235:25;;-1:-1:-1;;16235:25:4;;;16087:196::o;16766:245::-;16925:27;16934:17;16925:8;:27::i;:::-;16893:23;:60;;;;;;;-1:-1:-1;;16893:60:4;;;;;;:23;16970:18;;;:11;:18;;;;;16963:25;;;;;;;16766:245;;:::o;11498:588:5:-;11723:18;3766:25;;;:12;:25;;;;;;11723:18;;11662:11;;-1:-1:-1;;;;;3766:25:5;3836:10;3822:24;;;:83;;-1:-1:-1;3862:29:5;;;;:16;:29;;;;;;-1:-1:-1;;;;;3862:29:5;3895:10;3862:43;3822:83;:139;;;-1:-1:-1;;;;;;3921:28:5;;;;;;:16;:28;;;;;;;;3950:10;3921:40;;;;;;;;;;3822:139;3801:174;;;;;;;;4245:1;4208:25;;;:12;:25;;;;;;11696:11;;-1:-1:-1;;;;;4208:25:5;:39;;4200:48;;;;;;11744:25;;;;:12;:25;;;;;;-1:-1:-1;;;;;11744:25:5;;;;-1:-1:-1;11787:19:5;;;;11779:28;;;;;;-1:-1:-1;;;;;11825:17:5;;;;11817:26;;;;;;11854:27;11864:3;11869:11;11854:9;:27::i;:::-;11896:16;:3;-1:-1:-1;;;;;11896:14:5;;:16::i;:::-;11892:188;;;11964:3;-1:-1:-1;;;;;11944:41:5;;11986:5;11993:11;12006:5;11944:68;;;;;-1:-1:-1;;;11944:68:5;;;;;;;-1:-1:-1;;;;;11944:68:5;-1:-1:-1;;;;;11944:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11944:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11944:68:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11944:68:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11944:68:5;1396:52;;;;;;;11944:68;1396:52;;;;;;;;;;;;;11944:68;;-1:-1:-1;;;12034:34:5;;;;;;12026:43;;;;;;3985:1;11498:588;;;;;;;;:::o;25586:132:16:-;3249:3;;-1:-1:-1;;;;;3249:3:16;3241:15;;3240:49;;-1:-1:-1;3280:3:16;;3260:25;;-1:-1:-1;;;;;3280:3:16;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:16;-1:-1:-1;;;;;3373:14:16;;:16;;;;;-1:-1:-1;;;3373:16:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:16;3360:8;;-1:-1:-1;;;;;3360:8:16;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:16;-1:-1:-1;;;;;3424:14:16;;:16;;;;;-1:-1:-1;;;3424:16:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:16;3403:8;:38;;-1:-1:-1;;;;;;3403:38:16;-1:-1:-1;;;;;3403:38:16;;;;;;;;;3349:92;25675:8;;:36;;;;;;;;;;;;;;-1:-1:-1;;;;;25675:8:16;;;;:26;;:36;;;;;:8;;:36;;;;;;;;:8;;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;25675:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5776:134:16;3249:3;;5852:4;;-1:-1:-1;;;;;3249:3:16;3241:15;;3240:49;;-1:-1:-1;3280:3:16;;3260:25;;-1:-1:-1;;;;;3280:3:16;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:16;-1:-1:-1;;;;;3373:14:16;;:16;;;;;-1:-1:-1;;;3373:16:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:16;3360:8;;-1:-1:-1;;;;;3360:8:16;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:16;-1:-1:-1;;;;;3424:14:16;;:16;;;;;-1:-1:-1;;;3424:16:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:16;3403:8;:38;;-1:-1:-1;;;;;;3403:38:16;-1:-1:-1;;;;;3403:38:16;;;;;;;;;3349:92;5874:8;;:29;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5874:8:16;;;;:17;;5892:10;;5874:29;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5874:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5874:29:16;;5776:134;-1:-1:-1;;5776:134:16:o;30185:404::-;30234:6;30283;;30234;30283;30255;;30251:22;;;30263:10;;;;;;;;;;;;;;;;;;-1:-1:-1;30263:10:16;;30251:22;30292:1;30283:10;;30321:65;30328:6;;30321:65;;30349:5;;;;;30373:2;30368:7;;;;30321:65;;;30425:3;30415:14;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;30415:14:16;-1:-1:-1;30395:34:16;-1:-1:-1;;;;30448:7:16;;30465:89;30472:6;;30465:89;;30493:9;;-1:-1:-1;;30498:3:16;;;-1:-1:-1;;;30510:2:16;30519;30515:6;;30510:11;30505:17;;30493:4;;30498:3;30493:9;;;;;;;;;;:29;-1:-1:-1;;;;;30493:29:16;;;;;;;;-1:-1:-1;30541:2:16;30536:7;;;;30465:89;;;30577:4;30563:19;;30185:404;;;;;;;;:::o;28178:823::-;28275:6;28293:16;28331;28369;28407;28445;28483:19;28589;28633:6;28658;28318:2;28293:28;;28356:2;28331:28;;28394:2;28369:28;;28432:2;28407:28;;28470:2;28445:28;;28568:3;:10;28555:3;:10;28542:3;:10;28529:3;:10;28516:3;:10;:23;:36;:49;:62;28505:74;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;28505:74:16;;28483:96;;28617:5;28589:34;;28642:1;28633:10;;28667:1;28658:10;;28653:58;28674:3;:10;28670:1;:14;28653:58;;;28705:3;28709:1;28705:6;;;;;;;;;;;;;;;-1:-1:-1;;;28705:6:16;;-1:-1:-1;;;28705:6:16;28691;28698:3;;;;;;28691:11;;;;;;;;;;;;;;:20;-1:-1:-1;;;;;28691:20:16;;;;;;;;-1:-1:-1;28686:3:16;;28653:58;;;-1:-1:-1;28730:1:16;28721:53;28737:3;:10;28733:1;:14;28721:53;;;28768:3;28772:1;28768:6;;;;;;;;;;;;;;;-1:-1:-1;;;28768:6:16;;-1:-1:-1;;;28768:6:16;28754;28761:3;;;;;;28754:11;;;;;;;;;;;;;;:20;-1:-1:-1;;;;;28754:20:16;;;;;;;;-1:-1:-1;28749:3:16;;28721:53;;;-1:-1:-1;28793:1:16;28784:53;28800:3;:10;28796:1;:14;28784:53;;;28831:3;28835:1;28831:6;;;;;;;;;;;;;;;-1:-1:-1;;;28831:6:16;;-1:-1:-1;;;28831:6:16;28817;28824:3;;;;;;28817:11;;;;;;;;;;;;;;:20;-1:-1:-1;;;;;28817:20:16;;;;;;;;-1:-1:-1;28812:3:16;;28784:53;;;-1:-1:-1;28856:1:16;28847:53;28863:3;:10;28859:1;:14;28847:53;;;28894:3;28898:1;28894:6;;;;;;;;;;;;;;;-1:-1:-1;;;28894:6:16;;-1:-1:-1;;;28894:6:16;28880;28887:3;;;;;;28880:11;;;;;;;;;;;;;;:20;-1:-1:-1;;;;;28880:20:16;;;;;;;;-1:-1:-1;28875:3:16;;28847:53;;;-1:-1:-1;28919:1:16;28910:53;28926:3;:10;28922:1;:14;28910:53;;;28957:3;28961:1;28957:6;;;;;;;;;;;;;;;-1:-1:-1;;;28957:6:16;;-1:-1:-1;;;28957:6:16;28943;28950:3;;;;;;28943:11;;;;;;;;;;;;;;:20;-1:-1:-1;;;;;28943:20:16;;;;;;;;-1:-1:-1;28938:3:16;;28910:53;;;-1:-1:-1;28987:6:16;;28178:823;-1:-1:-1;;;;;;;;;;;;;28178:823:16:o;29160:136::-;29235:6;29260:29;29270:2;29274;29278;29260:29;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;29253:36;29160:136;-1:-1:-1;;;;29160:136:16:o;7112:356::-;3249:3;;7212:10;;;;-1:-1:-1;;;;;3249:3:16;3241:15;;3240:49;;-1:-1:-1;3280:3:16;;3260:25;;-1:-1:-1;;;;;3280:3:16;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:16;-1:-1:-1;;;;;3373:14:16;;:16;;;;;-1:-1:-1;;;3373:16:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:16;3360:8;;-1:-1:-1;;;;;3360:8:16;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:16;-1:-1:-1;;;;;3424:14:16;;:16;;;;;-1:-1:-1;;;3424:16:16;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:16;3403:8;:38;;-1:-1:-1;;;;;;3403:38:16;-1:-1:-1;;;;;3403:38:16;;;;;;;;;3349:92;7246:8;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7246:8:16;;;;:17;;7264:10;;7276:8;;7246:39;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7246:39:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7246:39:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7246:39:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7246:39:16;;-1:-1:-1;7307:7:16;7317:11;:20;;7307:30;7299:38;;7295:52;;;7346:1;;-1:-1:-1;7339:8:16;;7295:52;7391:8;;:70;;;;;:8;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7391:8:16;;;;:27;;7425:5;;7391:8;7435:10;;7447:3;;7452:8;;7391:70;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7391:70:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7391:70:16;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7391:70:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7391:70:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7391:70:16;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7391:70:16;;7112:356;-1:-1:-1;;;;;7112:356:16:o;12772:198:5:-;12892:29;;;;:16;:29;;;;;;;;12885:36;;-1:-1:-1;;;;;;12885:36:5;;;12931:32;;;;;;;-1:-1:-1;;;;;12931:32:5;;;;;;;;;;;12772:198;;:::o;13276:326::-;13389:25;;;;:12;:25;;;;;;-1:-1:-1;;;;;13389:34:5;;;:25;;:34;13381:43;;;;;;-1:-1:-1;;;;;13441:29:5;;13473:1;13441:29;;;:22;:29;;;;;;:33;13434:41;;;;-1:-1:-1;;;;;13517:29:5;;;;;;:22;:29;;;;;;:36;;13551:1;13517:36;:33;:36;:::i;:::-;-1:-1:-1;;;;;13485:29:5;;;;;;;:22;:29;;;;;;;;:68;;;;13570:25;;;:12;:25;;;;13563:32;;-1:-1:-1;;;;;;13563:32:5;;;13276:326::o;13901:278::-;14053:1;14016:25;;;:12;:25;;;;;;-1:-1:-1;;;;;14016:25:5;:39;14008:48;;;;;;14067:25;;;;:12;:25;;;;;;;;:31;;-1:-1:-1;;;;;;14067:31:5;-1:-1:-1;;;;;14067:31:5;;;;;;;;14138:27;;:22;:27;;;;;;:34;;-1:-1:-1;14138:31:5;:34::i;:::-;-1:-1:-1;;;;;14108:27:5;;;;;;;:22;:27;;;;;:64;;;;-1:-1:-1;13901:278:5:o;25882:150:16:-;25998:18;;25975:51::o;3565:183::-;3628:4;3648:21;:19;:21::i;:::-;3641:28;3565:183;-1:-1:-1;;3565:183:16:o;12380:514:4:-;-1:-1:-1;;;;;12489:17:4;;;;12482:25;;;;12561:1;12524:25;;;:12;:25;;;;;;-1:-1:-1;;;;;12524:25:4;:39;12517:47;;;;12575:29;12587:3;12592:11;12575;:29::i;:::-;12615:215;12640:3;12657:6;12664:11;12657:19;;;;;;;;;;;;;;;;;;;;:28;;12699:6;12706:11;12699:19;;;;;;;;;;;;;;;;;;:33;:19;;;;;:33;;12746:6;:19;;12699:33;;;;;12753:11;;12746:19;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;12791:6;12798:11;12791:19;;;;;;;;;;;;;;;;;;;12615:215;;;-1:-1:-1;;;;;12615:215:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12791:29;-1:-1:-1;;12615:215:4;;;;;;;;;;;;;;;;;;;12791:19;;;;;;;:29;;;;;12615:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12615:215:4;;;;;;;;-1:-1:-1;;12615:215:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12849:38;;;;;;;;-1:-1:-1;;;;;12849:38:4;;;12866:1;;12849:38;;;;;;;;;12380:514;;:::o;13652:69::-;13701:13;:11;:13::i;6554:350::-;5880:6;;;;;;;5872:15;;;;;;;;6622:6;:14;;-1:-1:-1;;6622:14:4;;;6646:8;;;;6631:5;;6646:8;6814:10;6798:4;:12;:26;6795:103;;6840:15;:22;;-1:-1:-1;;6840:22:4;;;;;6876:11;:9;:11::i;29449:97:16:-;29501:4;29524:15;29533:2;29537:1;29524:8;:15::i;423:658:15:-;519:4;979:18;;1066:8;;423:658::o;1445:176:12:-;1551:7;1581:8;;;;1574:16;;;;-1:-1:-1;1607:7:12;;;1445:176::o;1739:198::-;1845:7;1880;;;1904;;;;1897:15;;;;1929:1;1739:198;-1:-1:-1;;;1739:198:12:o;3753:1749:16:-;3801:4;3876:1;3820:55;3832:42;3820:11;:55::i;:::-;:57;3816:245;;;3902:3;:71;;-1:-1:-1;;;;;;3902:71:16;3930:42;3902:71;;;3987:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;-1:-1:-1;4046:4:16;4039:11;;3816:245;4130:1;4074:55;4086:42;4074:11;:55::i;:::-;:57;4070:254;;;4164:3;:71;;-1:-1:-1;;;;;;4164:71:16;4192:42;4164:71;;;4249:39;;;;;;;;;;;;;;;;;;;:23;:39::i;4070:254::-;4393:1;4337:55;4349:42;4337:11;:55::i;:::-;:57;4333:249;;;4425:3;:71;;-1:-1:-1;;;;;;4425:71:16;4453:42;4425:71;;;4510:36;;;;;;;;;;;;;;;;;;;:23;:36::i;4333:249::-;4651:1;4595:55;4607:42;4595:11;:55::i;:::-;:57;4591:253;;;4685:3;:71;;-1:-1:-1;;;;;;4685:71:16;4713:42;4685:71;;;4770:38;;;;;;;;;;;;;;;;;;;:23;:38::i;4591:253::-;4913:1;4857:55;4869:42;4857:11;:55::i;:::-;:57;4853:201;;;-1:-1:-1;4947:3:16;:71;;-1:-1:-1;;;;;;4947:71:16;4975:42;4947:71;;;;5032:11;;4853:201;5123:1;5067:55;5079:42;5067:11;:55::i;:::-;:57;5063:200;;;-1:-1:-1;5156:3:16;:71;;-1:-1:-1;;;;;;5156:71:16;5184:42;5156:71;;;;5241:11;;5063:200;5332:1;5276:55;5288:42;5276:11;:55::i;:::-;:57;5272:202;;;-1:-1:-1;5367:3:16;:71;;-1:-1:-1;;;;;;5367:71:16;5395:42;5367:71;;;;5452:11;;5272:202;-1:-1:-1;5490:5:16;3753:1749;:::o;13188:149:4:-;13296:34;13313:3;13318:11;13296:16;:34::i;14005:227::-;14061:18;14059:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;14059:20:4;;;;;;;;;;;;14113:26;;;;14092:18;;;:47;14089:137;;;14155:15;:13;:15::i;7423:98::-;7475:6;:4;:6::i;:::-;7491:15;:23;;-1:-1:-1;;7491:23:4;;;7423:98::o;29586:593:16:-;29647:4;29692:2;29647:4;;;29759:357;29776:7;:14;29774:1;:16;29759:357;;;29815:10;;:16;;:7;;29823:1;;29815:10;;;;;;;;;;;-1:-1:-1;;;29815:10:16;;-1:-1:-1;;;29815:10:16;-1:-1:-1;;;;;29815:16:16;;;;29814:38;;;;-1:-1:-1;29835:10:16;;:16;;:7;;29843:1;;29835:10;;;;;;;;;;;-1:-1:-1;;;29835:10:16;;-1:-1:-1;;;29835:10:16;-1:-1:-1;;;;;29835:16:16;;;;29814:38;29810:295;;;29875:8;29871:102;;;29909:7;;29905:49;;;29918:5;;29905:49;-1:-1:-1;;29950:4:16;;;;29905:49;29998:2;29990:10;;;;30045:2;30031:7;30039:1;30031:10;;;;;;;;;;;;;;;-1:-1:-1;;;30031:10:16;;-1:-1:-1;;;30031:10:16;-1:-1:-1;;;30026:16:16;;:21;30018:29;;;;29810:295;;;30072:7;30080:1;30072:10;;;;;;;;;;;;;;;-1:-1:-1;;;30072:10:16;;-1:-1:-1;;;30072:10:16;-1:-1:-1;;;;;30072:16:16;;30086:2;-1:-1:-1;;;30072:16:16;;30068:37;;;30101:4;30090:15;;30068:37;29792:3;;29759:357;;;30134:1;30129:2;:6;30125:26;;;30149:2;30145;:6;30137:14;;;;30125:26;-1:-1:-1;30168:4:16;;29586:593;-1:-1:-1;;;;;29586:593:16:o;34001:118::-;34075:37;;;;:21;;:37;;;;;:::i;14464:277:4:-;14520:18;:22;;14552;-1:-1:-1;;14520:22:4;;;;;14552;;;14520;14552;;;14541:1;14552:22;;;;;-1:-1:-1;;14552:22:4;;;;;;;;;;;14610:23;;;14587:20;;;;;;;:46;14584:151;;;14649:12;:10;:12::i;14584:151::-;14692:32;:30;:32::i;15121:581::-;15174:20;:24;;-1:-1:-1;;15174:24:4;;;;;15197:1;15212:14;;1412:2:0;15174:24:4;15212:14;;;:18;;;15211:33;;15208:488;;;15260:26;:24;:26::i;:::-;15300:34;:32;:34::i;:::-;15348:33;:31;:33::i;:::-;15397:14;15395:16;;;;;;;;;-1:-1:-1;;15395:16:4;;;;;;15208:488;;;15444:14;15442:16;;;;;;;;;-1:-1:-1;;15442:16:4;;;;;;15472:22;15479:15;15444:14;15472:22;:::i;:::-;15515:23;15508:30;;-1:-1:-1;;15640:25:4;;;15679:7;;21432:634;21573:19;21841:10;21528:25;;;;;;;;;;;;;;;-1:-1:-1;;;;;21528:25:4;;;:17;:25::i;:::-;21513:4;:12;:40;21505:49;;;;;;21595:3;21573:25;;;;;;;;;;;;;-1:-1:-1;;21573:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;21595:3;21573:25;;21595:3;21573:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21625:197;21648:5;21667:28;21676:14;;;;;;;;;;;21693:1;21676:18;21667:28;;:8;:28::i;:::-;21625:197;;;;;;;;;;;;;;;;;21750:20;;21741:30;;21750:20;;;;;21741:8;:30::i;:::-;21625:197;;;;;;;;;;;;;;;;;:9;:197::i;:::-;21617:205;;21854:59;;;;;;;;;;;;;;;-1:-1:-1;;;;;21854:59:4;;;21877:5;21884:28;;21854:14;:59::i;:::-;21925:10;21923:12;;;;;;;;;;;;;-1:-1:-1;;21923:12:4;;;;;;;21925:10;21945:15;;;:11;:15;;;;;:46;;21841:72;;-1:-1:-1;21923:12:4;;21945:46;21923:12;;21945:46;;;;;-1:-1:-1;22010:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;21432:634;;:::o;19209:535::-;19344:19;19530:10;19299:25;;;;;;;;;;;;;;;-1:-1:-1;;;;;19299:25:4;;;:17;:25::i;:::-;19284:4;:12;:40;19276:49;;;;;;19366:3;19344:25;;;;;;;;;;;;;-1:-1:-1;;19344:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;19366:3;19344:25;;19366:3;19344:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19447:14:4;;19344:25;;-1:-1:-1;19396:115:4;;19344:25;;-1:-1:-1;19438:28:4;;-1:-1:-1;19464:1:4;19447:14;;;;:18;19438:28;;-1:-1:-1;19438:8:4;:28::i;:::-;19396:115;;;;;;;;;;;;;;;;;:9;:115::i;:::-;19388:123;;19543:53;;;;;;;;;;;;;;;-1:-1:-1;;;;;19543:53:4;;;19566:5;19573:22;;19543:14;:53::i;:::-;19608:10;19606:12;;-1:-1:-1;;19606:12:4;;;;;;;;;;;;;;;;;-1:-1:-1;19628:15:4;;;:11;:15;;;;;:41;;:15;;-1:-1:-1;19646:23:4;;19628:15;;:41;;19646:23;19628:41;;20112:568;20255:19;20449:10;20210:25;;;;;;;;;;;;;;;-1:-1:-1;;;;;20210:25:4;;;:17;:25::i;:::-;20195:4;:12;:40;20187:49;;;;;;20277:3;20255:25;;;;;;;;;;;;;-1:-1:-1;;20255:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;20277:3;20255:25;;20277:3;20255:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20358:14:4;;20255:25;;-1:-1:-1;20307:123:4;;20255:25;;-1:-1:-1;20349:28:4;;-1:-1:-1;20375:1:4;20358:14;;;;:18;20349:28;;-1:-1:-1;20349:8:4;:28::i;:::-;20307:123;;;;;;;;;;;;;;;;;:9;:123::i;:::-;20299:131;;20462:61;;;;;;;;;;;;;;;-1:-1:-1;;;;;20462:61:4;;;20485:5;20492:30;;20462:14;:61::i;:::-;20535:10;20533:12;;-1:-1:-1;;20533:12:4;;;;;;;;;;;;;;;;;-1:-1:-1;20555:15:4;;;:11;:15;;;;;:50;;:15;;-1:-1:-1;20573:32:4;;20555:15;;:50;;20573:32;20555:50;;22818:636;22960:19;23228:10;22915:25;;;;;;;;;;;;;;;-1:-1:-1;;;;;22915:25:4;;;:17;:25::i;:::-;22900:4;:12;:40;22892:49;;;;;;22982:3;22960:25;;;;;;;;;;;;;-1:-1:-1;;22960:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;22982:3;22960:25;;22982:3;22960:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23063:14:4;;22960:25;;-1:-1:-1;23012:197:4;;22960:25;;-1:-1:-1;23054:28:4;;-1:-1:-1;23080:1:4;23063:14;;;;:18;23054:28;;-1:-1:-1;23054:8:4;:28::i;23012:197::-;23004:205;;23241:60;;;;;;;;;;;;;;;-1:-1:-1;;;;;23241:60:4;;;23264:5;23271:29;;23241:14;:60::i;640:8563:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:8563:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:8563:1;;;-1:-1:-1;640:8563:1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "/**\n * @file BibleTokenCore.sol\n * @author John DeBord <i@johndebord.tk>\n * @date 2018\n */\n \n // TODO\n // [ ] Make function to transfer contract-owned tokens\n // [ ] Calculate maximum gas cost possible for an Oraclize query\n\npragma solidity ^0.4.20;\n\nimport \"./BibleTokenMinting.sol\";\nimport \"./BibleTokenMetadata.sol\";\n\n/**\n * @title BibleTokenCore\n * @dev This contract gets the wheels turning; initializing the \"Genesis\" state\n * variables so that we can start writing/minted the Bible to the blockchain!\n * This contract also contains the additional function to look up and read any\n * given verse that has been written blockchain.\n */\ncontract BibleTokenCore is\n    BibleTokenMinting,\n    BibleTokenMetadata\n{\n    \n    /**\n     * @dev The constructor of this contract; initialzes all state variables in\n     * accordane to the book of \"Genesis\".\n     */\n    function BibleTokenCore()\n        public\n    {\t\n        url = \"xml(QmWHM6Q1jLn5TszMQVYvLaSj3bug2qSkWGey3ExDGyoYQy).xpath(/Bible/Book[@id='\";\n        \n        booksCompleted = 0;\n        \n        currentBookName = \"Genesis\";\n        currentNumberOfChapters = 50;\n        currentChapterVersesNumber = 31;\n        currentChapterNumber = 1;\n        currentVerseNumber = 1;\n    }\n    \n    /**\n     * @dev This function is for setting the gas price for Oraclize queries.\n     * Needed for if the gas price of using the Oraclize service fluctuates.\n     * Note that only the owner can call this function and the argument passed\n     * must be in Wei.\n     * @param _gasPrice The amount if Wei to set the Oraclize gas price.\n     */\n    function setOraclizeGasPrice(\n        uint256 _gasPrice\n    )\n        onlyOwner\n        whenPaused\n        external\n    {\n        oraclize_setCustomGasPrice(_gasPrice);\n    }\n\n    /**\n     * @dev This function sets the price as to how much a user must pay in order\n     * to mint a BibleToken.\n     * @notice This funcitons argument must be given as a percentage; e.g. 3 == 0.03 Ether.\n     * @param _price The amount in Ether to set the price.\n     */\n    function setPrice(\n        uint256 _price\n    )\n        onlyOwner\n        whenPaused\n        external\n    {\n        uint256 newPrice = 1 ether * _price / 100;\n        price = newPrice;\n    }\n    \n    /**\n     * @dev This function is for setting the gas limits of the different Oraclize\n     * queries, just in case the queries need tweaking in the future.\n     * Note that only the owner can call this function and the argument passed\n     * must be in Wei.\n     * @param _mintVerseGasLimit For the mint verse query.\n     * @param _updateBookNameGasLimit For the book name query.\n     * @param _updateNumberOfChaptersGasLimit For the number of chapters query.\n     * @param _updateChapterVersesIGasLimit For the chapter verses I query.\n     * @param _updateChapterVersesIIGasLimit For the chapter verses II query.\n     */\n    function setOraclizeGasLimits(\n        uint256 _mintVerseGasLimit,\n        uint256 _updateBookNameGasLimit,\n        uint256 _updateNumberOfChaptersGasLimit,\n        uint256 _updateChapterVersesIGasLimit,\n        uint256 _updateChapterVersesIIGasLimit\n    )\n        onlyOwner\n        whenPaused\n        external\n    {\n        mintVerseGasLimit = _mintVerseGasLimit;\n        updateBookNameGasLimit = _updateBookNameGasLimit;\n        updateNumberOfChaptersGasLimit = _updateNumberOfChaptersGasLimit;\n        updateChapterVersesIGasLimit = _updateChapterVersesIGasLimit;\n        updateChapterVersesIIGasLimit = _updateChapterVersesIIGasLimit;\n    }\n    \n    /**\n     * @dev This function sets the IPFS URL that is used by this contract.\n     * Only the owner of the contract can change it. It is needed just in case\n     * something happens where the BibleData on the IPFS is compromised. Note\n     * that the new url must be specified in the format shown in the constructor.\n     * This function should never be used, but it is still a must to have it.\n     * @param _url The url state variable that may need to be audited.\n     */\n    function setURL(\n        string _url\n    )\n        onlyOwner\n        whenPaused\n        external\n    {\n        url = _url;\n    }\n    \n    /**\n     * @dev This function sets all state variables to a certain value. This function is also needed just in case\n     * there is a problem with the Oraclize API and somehow the state variables need to be reset in a way. Again,\n     * this function should never be used, but is still a must to have.\n     * @param _booksCompleted The booksCompleted state variable that may need to be audited.\n     * @param _currentBookName The currentBookName state variable that may need to be audited.\n     * @param _currentNumberOfChapters The currentNumberOfChapters state variable that may need to be audited.\n     * @param _currentChapterVersesNumber The currentChapterVersesNumber state variable that may need to be audited.\n     * @param _currentChapterNumber The currentChapterNumber state variable that may need to be audited.\n     * @param _currentVerseNumber The currentVerseNumber state variable that may need to be audited.\n     */\n    function setStateVariables(\n        uint8 _booksCompleted,\n        string _currentBookName,\n        uint8 _currentNumberOfChapters,\n        uint8 _currentChapterVersesNumber,\n        uint8 _currentChapterNumber,\n        uint8 _currentVerseNumber\n    )\n        onlyOwner\n        whenPaused\n        external\n    {\n        booksCompleted = _booksCompleted;\n        currentBookName = _currentBookName;\n        currentNumberOfChapters = _currentNumberOfChapters;\n        currentChapterVersesNumber = _currentChapterVersesNumber;\n        currentChapterNumber = _currentChapterNumber;\n        currentVerseNumber = _currentVerseNumber;\n    }\n    \n    /**\n     * @dev This function makes a correction to a verse just in case any data in a\n     * verse gets corrupted somehow. This should NEVER happen. But alas, again, this\n     * function should never be used, but is still a must to have.\n     * @param _tokenIndex The index of the token that is to be audited.\n     * @param _bookName The name of the book that may need to be audited.\n     * @param _chapterNumber The chapter number that may need to be audited.\n     * @param _verseNumber The verse number that may need to be audited.\n     * @param _verseText The text of the verse that may need to be audited.\n     */\n    function auditVerse(\n        uint256 _tokenIndex,\n        string _bookName,\n        uint8 _chapterNumber,\n        uint8 _verseNumber,\n        string _verseText\n    )\n        onlyOwner\n        whenPaused\n        external\n    {\n        tokens[_tokenIndex].bookName = _bookName;\n        tokens[_tokenIndex].chapterNumber = _chapterNumber;\n        tokens[_tokenIndex].verseNumber = _verseNumber;\n        tokens[_tokenIndex].verseText = _verseText;\n    }\n    \n    /**\n     * @dev This is the function that will allow anyone in the world that has access\n     * to the Ethereum blockchain to be able to look up any verse in the Bible that has been minted\n     * through this contract for no cost! That is the awesome part about writing the Bible\n     * to the blockchain; that once it has been written, it will remain immutable and\n     * be accessible to anyone who has access to the Ethereum blockchain.\n     * @param _book The given book of the Bible.\n     * @param _chapter The given chapter of the Bible.\n     * @param _verse The given verse of the Bible.\n     */\n    function retrieveVerse(\n        string _book,\n        uint8 _chapter,\n        uint8 _verse\n    )\n        view\n        public\n        returns (string)\n    {\n        // The maximum number of chapters that can be a book; Psalms has the most, at 150\n        require((_chapter > 0) && (_chapter <= 150));\n        // The maximum number of verses that can be in a chapter; Psalms 119 has the most at 176\n        require((_verse > 0) && (_verse <= 176));\n        \n        for(uint256 i = 0; i < tokens.length; ++i) {\n            // Using keccak256 because strings of type storage ref and string memory cannot compare\n            if(keccak256(tokens[i].bookName) == keccak256(_book) &&\n               tokens[i].chapterNumber == _chapter &&\n               tokens[i].verseNumber == _verse)\n               return tokens[i].verseText;\n        }\n\n        return \"Verse not minted, or invalid arguments.\";\n    }\n    \n    /**\n     * @dev This function is used for debugging purposes when calculating the differing\n     * Oraclize queries.\n     */\n    function addFunds()\n        external\n        payable\n        returns (string)\n    {\n        return \"Successfully added funds.\";\n    }\n    \n    /**\n     * @dev This function is used for debugging purposes when calculating the differing\n     * Oraclize queries.\n     */\n    function contractBalance()\n        external\n        view\n        returns (uint256)\n    {\n        uint256 balance = this.balance;\n        return balance;\n    }\n    \n    /**\n     * @dev Withdraws the current balance of the contract; this can only be done by the\n     * owner of the contract.\n     */\n    function withdrawBalance()\n        onlyOwner\n        external\n    {\n        uint256 balance = this.balance;\n        require(balance > 0);\n        owner.send(balance);\n    }\n    \n}\n",
  "sourcePath": "/home/i/BibleToken/contracts/BibleTokenCore.sol",
  "ast": {
    "absolutePath": "/home/i/BibleToken/contracts/BibleTokenCore.sol",
    "exportedSymbols": {
      "BibleTokenCore": [
        372
      ]
    },
    "id": 373,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 30,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "225:24:1"
      },
      {
        "absolutePath": "/home/i/BibleToken/contracts/BibleTokenMinting.sol",
        "file": "./BibleTokenMinting.sol",
        "id": 31,
        "nodeType": "ImportDirective",
        "scope": 373,
        "sourceUnit": 1333,
        "src": "251:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/i/BibleToken/contracts/BibleTokenMetadata.sol",
        "file": "./BibleTokenMetadata.sol",
        "id": 32,
        "nodeType": "ImportDirective",
        "scope": 373,
        "sourceUnit": 462,
        "src": "285:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33,
              "name": "BibleTokenMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1332,
              "src": "671:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BibleTokenMinting_$1332",
                "typeString": "contract BibleTokenMinting"
              }
            },
            "id": 34,
            "nodeType": "InheritanceSpecifier",
            "src": "671:17:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 35,
              "name": "BibleTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 461,
              "src": "694:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BibleTokenMetadata_$461",
                "typeString": "contract BibleTokenMetadata"
              }
            },
            "id": 36,
            "nodeType": "InheritanceSpecifier",
            "src": "694:18:1"
          }
        ],
        "contractDependencies": [
          28,
          2311,
          2371,
          1980,
          1990,
          2090,
          2098,
          2111,
          2157,
          410,
          461,
          1332,
          8212
        ],
        "contractKind": "contract",
        "documentation": "@title BibleTokenCore\n@dev This contract gets the wheels turning; initializing the \"Genesis\" state\nvariables so that we can start writing/minted the Bible to the blockchain!\nThis contract also contains the additional function to look up and read any\ngiven verse that has been written blockchain.",
        "fullyImplemented": true,
        "id": 372,
        "linearizedBaseContracts": [
          372,
          461,
          2111,
          1332,
          8212,
          410,
          2098,
          1980,
          2157,
          1990,
          2090,
          2371,
          2311,
          28
        ],
        "name": "BibleTokenCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "908:329:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "919:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "786d6c28516d57484d3651316a4c6e3554737a4d515659764c61536a336275673271536b574765793345784447796f595179292e7870617468282f4269626c652f426f6f6b5b4069643d27",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "925:77:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_af19f964731c3f817378f56ad71682ec47f122f3fdabee491addb9c3adca9d62",
                        "typeString": "literal_string \"xml(QmWHM6Q1jLn5TszMQVYvLaSj3bug2qSkWGey3ExDGyoYQy).xpath(/Bible/Book[@id='\""
                      },
                      "value": "xml(QmWHM6Q1jLn5TszMQVYvLaSj3bug2qSkWGey3ExDGyoYQy).xpath(/Bible/Book[@id='"
                    },
                    "src": "919:83:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "919:83:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 43,
                      "name": "booksCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1021:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1038:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1021:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "currentBookName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1058:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "47656e65736973",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1076:9:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_9103a025a75bb477d2f904b04fe1e406135b6e6df32cf6c67912903b3f4407a5",
                        "typeString": "literal_string \"Genesis\""
                      },
                      "value": "Genesis"
                    },
                    "src": "1058:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "currentNumberOfChapters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1095:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1121:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "1095:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "currentChapterVersesNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1133:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3331",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1162:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_31_by_1",
                        "typeString": "int_const 31"
                      },
                      "value": "31"
                    },
                    "src": "1133:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "currentChapterNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1174:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1197:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1174:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "currentVerseNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1208:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1229:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1208:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:22:1"
                }
              ]
            },
            "documentation": "@dev The constructor of this contract; initialzes all state variables in\naccordane to the book of \"Genesis\".",
            "id": 68,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "BibleTokenCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:0:1"
            },
            "scope": 372,
            "src": "863:374:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1712:54:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "_gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1749:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77,
                      "name": "oraclize_setCustomGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5867,
                      "src": "1722:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1722:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:37:1"
                }
              ]
            },
            "documentation": "@dev This function is for setting the gas price for Oraclize queries.\nNeeded for if the gas price of using the Oraclize service fluctuates.\nNote that only the owner can call this function and the argument passed\nmust be in Wei.\n@param _gasPrice The amount if Wei to set the Oraclize gas price.",
            "id": 82,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 73,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 72,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "1662:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1662:9:1"
              },
              {
                "arguments": null,
                "id": 75,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 74,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "1680:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1680:10:1"
              }
            ],
            "name": "setOraclizeGasPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1630:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1620:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1712:0:1"
            },
            "scope": 372,
            "src": "1592:174:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "2155:84:1",
              "statements": [
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "name": "newPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 104,
                      "src": "2165:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2165:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2184:7:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "2194:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2184:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2203:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2184:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2165:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "2216:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2224:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2216:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2216:16:1"
                }
              ]
            },
            "documentation": "@dev This function sets the price as to how much a user must pay in order\nto mint a BibleToken.\n@notice This funcitons argument must be given as a percentage; e.g. 3 == 0.03 Ether.\n@param _price The amount in Ether to set the price.",
            "id": 104,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 87,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 86,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "2105:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2105:9:1"
              },
              {
                "arguments": null,
                "id": 89,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 88,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "2123:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2123:10:1"
              }
            ],
            "name": "setPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "2076:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2066:30:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:0:1"
            },
            "scope": 372,
            "src": "2049:190:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "3190:329:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "mintVerseGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "3200:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_mintVerseGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "3220:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3200:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "updateBookNameGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "3248:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "_updateBookNameGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3273:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3248:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "3248:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "updateNumberOfChaptersGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "3306:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "_updateNumberOfChaptersGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "3339:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3306:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "3306:64:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 133,
                      "name": "updateChapterVersesIGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "3380:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 134,
                      "name": "_updateChapterVersesIGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "3411:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3380:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "updateChapterVersesIIGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "3450:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 138,
                      "name": "_updateChapterVersesIIGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "3482:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3450:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:62:1"
                }
              ]
            },
            "documentation": "@dev This function is for setting the gas limits of the different Oraclize\nqueries, just in case the queries need tweaking in the future.\nNote that only the owner can call this function and the argument passed\nmust be in Wei.\n@param _mintVerseGasLimit For the mint verse query.\n@param _updateBookNameGasLimit For the book name query.\n@param _updateNumberOfChaptersGasLimit For the number of chapters query.\n@param _updateChapterVersesIGasLimit For the chapter verses I query.\n@param _updateChapterVersesIIGasLimit For the chapter verses II query.",
            "id": 142,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 117,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 116,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "3140:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3140:9:1"
              },
              {
                "arguments": null,
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 118,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "3158:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3158:10:1"
              }
            ],
            "name": "setOraclizeGasLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "_mintVerseGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2914:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2914:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "_updateBookNameGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2950:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "name": "_updateNumberOfChaptersGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2991:39:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "name": "_updateChapterVersesIGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3040:37:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3040:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "name": "_updateChapterVersesIIGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3087:38:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2904:227:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3190:0:1"
            },
            "scope": 372,
            "src": "2875:644:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "4109:27:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "4119:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "_url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "4125:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "4119:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "4119:10:1"
                }
              ]
            },
            "documentation": "@dev This function sets the IPFS URL that is used by this contract.\nOnly the owner of the contract can change it. It is needed just in case\nsomething happens where the BibleData on the IPFS is compromised. Note\nthat the new url must be specified in the format shown in the constructor.\nThis function should never be used, but it is still a must to have it.\n@param _url The url state variable that may need to be audited.",
            "id": 156,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 147,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 146,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "4059:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4059:9:1"
              },
              {
                "arguments": null,
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 148,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "4077:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4077:10:1"
              }
            ],
            "name": "setURL",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "_url",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "4033:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4023:27:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4109:0:1"
            },
            "scope": 372,
            "src": "4008:128:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "5393:323:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "booksCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "5403:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 176,
                      "name": "_booksCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "5420:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5403:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "5403:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 179,
                      "name": "currentBookName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "5445:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "_currentBookName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "5463:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "5445:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "5445:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 183,
                      "name": "currentNumberOfChapters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5489:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "_currentNumberOfChapters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "5515:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5489:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "5489:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "currentChapterVersesNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "5549:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 188,
                      "name": "_currentChapterVersesNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "5578:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5549:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "5549:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "currentChapterNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "5615:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "_currentChapterNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "5638:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5615:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "5615:44:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "currentVerseNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "5669:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 196,
                      "name": "_currentVerseNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "5690:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5669:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "5669:40:1"
                }
              ]
            },
            "documentation": "@dev This function sets all state variables to a certain value. This function is also needed just in case\nthere is a problem with the Oraclize API and somehow the state variables need to be reset in a way. Again,\nthis function should never be used, but is still a must to have.\n@param _booksCompleted The booksCompleted state variable that may need to be audited.\n@param _currentBookName The currentBookName state variable that may need to be audited.\n@param _currentNumberOfChapters The currentNumberOfChapters state variable that may need to be audited.\n@param _currentChapterVersesNumber The currentChapterVersesNumber state variable that may need to be audited.\n@param _currentChapterNumber The currentChapterNumber state variable that may need to be audited.\n@param _currentVerseNumber The currentVerseNumber state variable that may need to be audited.",
            "id": 200,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 171,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 170,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "5343:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5343:9:1"
              },
              {
                "arguments": null,
                "id": 173,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 172,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "5361:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5361:10:1"
              }
            ],
            "name": "setStateVariables",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "_booksCompleted",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5119:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5119:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "name": "_currentBookName",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5150:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5150:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "name": "_currentNumberOfChapters",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5183:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5183:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "name": "_currentChapterVersesNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5223:33:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5223:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "name": "_currentChapterNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5266:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5266:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "name": "_currentVerseNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5303:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5303:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5109:225:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5393:0:1"
            },
            "scope": 372,
            "src": "5083:633:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "6573:225:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 217,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "6583:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                            "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                          }
                        },
                        "id": 219,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "_tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6590:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6583:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$10_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bookName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "6583:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "_bookName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "6614:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6583:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "6583:40:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "6633:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                            "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                          }
                        },
                        "id": 226,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "_tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6640:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6633:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$10_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "chapterNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "6633:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "_chapterNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "6669:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6633:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "6633:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "6693:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                            "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 232,
                          "name": "_tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6700:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6693:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$10_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verseNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "6693:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 235,
                      "name": "_verseNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "6727:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6693:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "6693:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 238,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "6749:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                            "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "_tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6756:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6749:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$10_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verseText",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "6749:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 242,
                      "name": "_verseText",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "6781:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6749:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "6749:42:1"
                }
              ]
            },
            "documentation": "@dev This function makes a correction to a verse just in case any data in a\nverse gets corrupted somehow. This should NEVER happen. But alas, again, this\nfunction should never be used, but is still a must to have.\n@param _tokenIndex The index of the token that is to be audited.\n@param _bookName The name of the book that may need to be audited.\n@param _chapterNumber The chapter number that may need to be audited.\n@param _verseNumber The verse number that may need to be audited.\n@param _verseText The text of the verse that may need to be audited.",
            "id": 246,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 213,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 212,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "6523:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6523:9:1"
              },
              {
                "arguments": null,
                "id": 215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 214,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "6541:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6541:10:1"
              }
            ],
            "name": "auditVerse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "_tokenIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6378:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6378:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "name": "_bookName",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6407:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6407:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "name": "_chapterNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6433:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6433:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "name": "_verseNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6463:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6463:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "name": "_verseText",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6491:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6491:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6368:146:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6573:0:1"
            },
            "scope": 372,
            "src": "6349:449:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "7569:742:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 258,
                                "name": "_chapter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 250,
                                "src": "7678:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7689:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7678:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 261,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7677:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 262,
                                "name": "_chapter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 250,
                                "src": "7696:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "313530",
                                "id": 263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7708:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_150_by_1",
                                  "typeString": "int_const 150"
                                },
                                "value": "150"
                              },
                              "src": "7696:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 265,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7695:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7677:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8230,
                        8231
                      ],
                      "referencedDeclaration": 8230,
                      "src": "7669:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7669:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "7669:44:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 270,
                                "name": "_verse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "7829:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7838:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7829:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 273,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7828:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 274,
                                "name": "_verse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "7845:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "313736",
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7855:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_176_by_1",
                                  "typeString": "int_const 176"
                                },
                                "value": "176"
                              },
                              "src": "7845:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 277,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7844:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7828:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8230,
                        8231
                      ],
                      "referencedDeclaration": 8230,
                      "src": "7820:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7820:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "7820:40:1"
                },
                {
                  "body": {
                    "id": 322,
                    "nodeType": "Block",
                    "src": "7922:324:1",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 293,
                                        "name": "tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "8049:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                                          "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                                        }
                                      },
                                      "id": 295,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 294,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 282,
                                        "src": "8056:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8049:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$10_storage",
                                        "typeString": "struct BibleTokenBase.Token storage ref"
                                      }
                                    },
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "bookName",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3,
                                    "src": "8049:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "id": 292,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8221,
                                  "src": "8039:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                    "typeString": "function () pure returns (bytes32)"
                                  }
                                },
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8039:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 299,
                                    "name": "_book",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 248,
                                    "src": "8082:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 298,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8221,
                                  "src": "8072:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                    "typeString": "function () pure returns (bytes32)"
                                  }
                                },
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8072:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "8039:49:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 302,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 386,
                                    "src": "8107:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                                      "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                                    }
                                  },
                                  "id": 304,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 303,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 282,
                                    "src": "8114:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8107:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Token_$10_storage",
                                    "typeString": "struct BibleTokenBase.Token storage ref"
                                  }
                                },
                                "id": 305,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chapterNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5,
                                "src": "8107:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 306,
                                "name": "_chapter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 250,
                                "src": "8134:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "8107:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8039:103:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 309,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "8161:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                                    "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                                  }
                                },
                                "id": 311,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 310,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "8168:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8161:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$10_storage",
                                  "typeString": "struct BibleTokenBase.Token storage ref"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verseNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7,
                              "src": "8161:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 313,
                              "name": "_verse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "8186:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "8161:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8039:153:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 321,
                        "nodeType": "IfStatement",
                        "src": "8036:199:1",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 316,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "8216:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                                  "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                                }
                              },
                              "id": 318,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 317,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 282,
                                "src": "8223:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8216:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$10_storage",
                                "typeString": "struct BibleTokenBase.Token storage ref"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verseText",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "8216:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "functionReturnParameters": 256,
                          "id": 320,
                          "nodeType": "Return",
                          "src": "8209:26:1"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "7898:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "7902:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7902:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7898:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 323,
                  "initializationExpression": {
                    "assignments": [
                      282
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 282,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "7883:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7883:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 284,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7895:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7883:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7917:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "7919:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 291,
                    "nodeType": "ExpressionStatement",
                    "src": "7917:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "7879:367:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "5665727365206e6f74206d696e7465642c206f7220696e76616c696420617267756d656e74732e",
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8263:41:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_670e852ec88f68dea3e1c0cc27b9ce985f7ccea6393b50e0acb393348a80ac10",
                      "typeString": "literal_string \"Verse not minted, or invalid arguments.\""
                    },
                    "value": "Verse not minted, or invalid arguments."
                  },
                  "functionReturnParameters": 256,
                  "id": 325,
                  "nodeType": "Return",
                  "src": "8256:48:1"
                }
              ]
            },
            "documentation": "@dev This is the function that will allow anyone in the world that has access\nto the Ethereum blockchain to be able to look up any verse in the Bible that has been minted\nthrough this contract for no cost! That is the awesome part about writing the Bible\nto the blockchain; that once it has been written, it will remain immutable and\nbe accessible to anyone who has access to the Ethereum blockchain.\n@param _book The given book of the Bible.\n@param _chapter The given chapter of the Bible.\n@param _verse The given verse of the Bible.",
            "id": 327,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "retrieveVerse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "_book",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "7447:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7447:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "name": "_chapter",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "7469:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7469:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "name": "_verse",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "7493:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7493:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7437:74:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "7557:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7557:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7556:8:1"
            },
            "scope": 372,
            "src": "7415:896:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "8532:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "5375636365737366756c6c792061646465642066756e64732e",
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8549:27:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d4654ab65083182c8e2b349efa34dee7b1176ae694605223b3ad1f4e04ed6e53",
                      "typeString": "literal_string \"Successfully added funds.\""
                    },
                    "value": "Successfully added funds."
                  },
                  "functionReturnParameters": 331,
                  "id": 333,
                  "nodeType": "Return",
                  "src": "8542:34:1"
                }
              ]
            },
            "documentation": "@dev This function is used for debugging purposes when calculating the differing\nOraclize queries.",
            "id": 335,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8467:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "8520:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8520:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8519:8:1"
            },
            "scope": 372,
            "src": "8450:133:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "8809:71:1",
              "statements": [
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "8819:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8819:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8276,
                      "src": "8837:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BibleTokenCore_$372",
                        "typeString": "contract BibleTokenCore"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "8837:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8819:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 345,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "8866:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 339,
                  "id": 346,
                  "nodeType": "Return",
                  "src": "8859:14:1"
                }
              ]
            },
            "documentation": "@dev This function is used for debugging purposes when calculating the differing\nOraclize queries.",
            "id": 348,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "contractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8746:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "8796:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8796:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8795:9:1"
            },
            "scope": 372,
            "src": "8722:158:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "9090:106:1",
              "statements": [
                {
                  "assignments": [
                    354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 354,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 371,
                      "src": "9100:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9100:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 357,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 355,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8276,
                      "src": "9118:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BibleTokenCore_$372",
                        "typeString": "contract BibleTokenCore"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "9118:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9100:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "9148:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9158:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9148:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8230,
                        8231
                      ],
                      "referencedDeclaration": 8230,
                      "src": "9140:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9140:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "9140:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "9181:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2259,
                        "src": "9170:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9170:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9170:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "9170:19:1"
                }
              ]
            },
            "documentation": "@dev Withdraws the current balance of the contract; this can only be done by the\nowner of the contract.",
            "id": 371,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 350,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "9059:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9059:9:1"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9048:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9090:0:1"
            },
            "scope": 372,
            "src": "9024:172:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 373,
        "src": "640:8563:1"
      }
    ],
    "src": "225:8979:1"
  },
  "legacyAST": {
    "absolutePath": "/home/i/BibleToken/contracts/BibleTokenCore.sol",
    "exportedSymbols": {
      "BibleTokenCore": [
        372
      ]
    },
    "id": 373,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 30,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "225:24:1"
      },
      {
        "absolutePath": "/home/i/BibleToken/contracts/BibleTokenMinting.sol",
        "file": "./BibleTokenMinting.sol",
        "id": 31,
        "nodeType": "ImportDirective",
        "scope": 373,
        "sourceUnit": 1333,
        "src": "251:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/i/BibleToken/contracts/BibleTokenMetadata.sol",
        "file": "./BibleTokenMetadata.sol",
        "id": 32,
        "nodeType": "ImportDirective",
        "scope": 373,
        "sourceUnit": 462,
        "src": "285:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33,
              "name": "BibleTokenMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1332,
              "src": "671:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BibleTokenMinting_$1332",
                "typeString": "contract BibleTokenMinting"
              }
            },
            "id": 34,
            "nodeType": "InheritanceSpecifier",
            "src": "671:17:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 35,
              "name": "BibleTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 461,
              "src": "694:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BibleTokenMetadata_$461",
                "typeString": "contract BibleTokenMetadata"
              }
            },
            "id": 36,
            "nodeType": "InheritanceSpecifier",
            "src": "694:18:1"
          }
        ],
        "contractDependencies": [
          28,
          2311,
          2371,
          1980,
          1990,
          2090,
          2098,
          2111,
          2157,
          410,
          461,
          1332,
          8212
        ],
        "contractKind": "contract",
        "documentation": "@title BibleTokenCore\n@dev This contract gets the wheels turning; initializing the \"Genesis\" state\nvariables so that we can start writing/minted the Bible to the blockchain!\nThis contract also contains the additional function to look up and read any\ngiven verse that has been written blockchain.",
        "fullyImplemented": true,
        "id": 372,
        "linearizedBaseContracts": [
          372,
          461,
          2111,
          1332,
          8212,
          410,
          2098,
          1980,
          2157,
          1990,
          2090,
          2371,
          2311,
          28
        ],
        "name": "BibleTokenCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "908:329:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "919:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "786d6c28516d57484d3651316a4c6e3554737a4d515659764c61536a336275673271536b574765793345784447796f595179292e7870617468282f4269626c652f426f6f6b5b4069643d27",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "925:77:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_af19f964731c3f817378f56ad71682ec47f122f3fdabee491addb9c3adca9d62",
                        "typeString": "literal_string \"xml(QmWHM6Q1jLn5TszMQVYvLaSj3bug2qSkWGey3ExDGyoYQy).xpath(/Bible/Book[@id='\""
                      },
                      "value": "xml(QmWHM6Q1jLn5TszMQVYvLaSj3bug2qSkWGey3ExDGyoYQy).xpath(/Bible/Book[@id='"
                    },
                    "src": "919:83:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "919:83:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 43,
                      "name": "booksCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1021:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1038:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1021:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "currentBookName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1058:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "47656e65736973",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1076:9:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_9103a025a75bb477d2f904b04fe1e406135b6e6df32cf6c67912903b3f4407a5",
                        "typeString": "literal_string \"Genesis\""
                      },
                      "value": "Genesis"
                    },
                    "src": "1058:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "currentNumberOfChapters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1095:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1121:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "1095:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "currentChapterVersesNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1133:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3331",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1162:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_31_by_1",
                        "typeString": "int_const 31"
                      },
                      "value": "31"
                    },
                    "src": "1133:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "currentChapterNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1174:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1197:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1174:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "currentVerseNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1208:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1229:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1208:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:22:1"
                }
              ]
            },
            "documentation": "@dev The constructor of this contract; initialzes all state variables in\naccordane to the book of \"Genesis\".",
            "id": 68,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "BibleTokenCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:0:1"
            },
            "scope": 372,
            "src": "863:374:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1712:54:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "_gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1749:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77,
                      "name": "oraclize_setCustomGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5867,
                      "src": "1722:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1722:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:37:1"
                }
              ]
            },
            "documentation": "@dev This function is for setting the gas price for Oraclize queries.\nNeeded for if the gas price of using the Oraclize service fluctuates.\nNote that only the owner can call this function and the argument passed\nmust be in Wei.\n@param _gasPrice The amount if Wei to set the Oraclize gas price.",
            "id": 82,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 73,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 72,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "1662:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1662:9:1"
              },
              {
                "arguments": null,
                "id": 75,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 74,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "1680:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1680:10:1"
              }
            ],
            "name": "setOraclizeGasPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1630:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1620:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1712:0:1"
            },
            "scope": 372,
            "src": "1592:174:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "2155:84:1",
              "statements": [
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "name": "newPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 104,
                      "src": "2165:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2165:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2184:7:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "2194:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2184:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2203:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2184:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2165:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "2216:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2224:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2216:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2216:16:1"
                }
              ]
            },
            "documentation": "@dev This function sets the price as to how much a user must pay in order\nto mint a BibleToken.\n@notice This funcitons argument must be given as a percentage; e.g. 3 == 0.03 Ether.\n@param _price The amount in Ether to set the price.",
            "id": 104,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 87,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 86,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "2105:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2105:9:1"
              },
              {
                "arguments": null,
                "id": 89,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 88,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "2123:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2123:10:1"
              }
            ],
            "name": "setPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "2076:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2066:30:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:0:1"
            },
            "scope": 372,
            "src": "2049:190:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "3190:329:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "mintVerseGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "3200:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_mintVerseGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "3220:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3200:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "updateBookNameGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "3248:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "_updateBookNameGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3273:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3248:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "3248:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "updateNumberOfChaptersGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "3306:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "_updateNumberOfChaptersGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "3339:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3306:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "3306:64:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 133,
                      "name": "updateChapterVersesIGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "3380:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 134,
                      "name": "_updateChapterVersesIGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "3411:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3380:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "updateChapterVersesIIGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "3450:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 138,
                      "name": "_updateChapterVersesIIGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "3482:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3450:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:62:1"
                }
              ]
            },
            "documentation": "@dev This function is for setting the gas limits of the different Oraclize\nqueries, just in case the queries need tweaking in the future.\nNote that only the owner can call this function and the argument passed\nmust be in Wei.\n@param _mintVerseGasLimit For the mint verse query.\n@param _updateBookNameGasLimit For the book name query.\n@param _updateNumberOfChaptersGasLimit For the number of chapters query.\n@param _updateChapterVersesIGasLimit For the chapter verses I query.\n@param _updateChapterVersesIIGasLimit For the chapter verses II query.",
            "id": 142,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 117,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 116,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "3140:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3140:9:1"
              },
              {
                "arguments": null,
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 118,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "3158:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3158:10:1"
              }
            ],
            "name": "setOraclizeGasLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "_mintVerseGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2914:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2914:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "_updateBookNameGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2950:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "name": "_updateNumberOfChaptersGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2991:39:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "name": "_updateChapterVersesIGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3040:37:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3040:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "name": "_updateChapterVersesIIGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3087:38:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2904:227:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3190:0:1"
            },
            "scope": 372,
            "src": "2875:644:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "4109:27:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "4119:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "_url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "4125:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "4119:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "4119:10:1"
                }
              ]
            },
            "documentation": "@dev This function sets the IPFS URL that is used by this contract.\nOnly the owner of the contract can change it. It is needed just in case\nsomething happens where the BibleData on the IPFS is compromised. Note\nthat the new url must be specified in the format shown in the constructor.\nThis function should never be used, but it is still a must to have it.\n@param _url The url state variable that may need to be audited.",
            "id": 156,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 147,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 146,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "4059:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4059:9:1"
              },
              {
                "arguments": null,
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 148,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "4077:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4077:10:1"
              }
            ],
            "name": "setURL",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "_url",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "4033:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4023:27:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4109:0:1"
            },
            "scope": 372,
            "src": "4008:128:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "5393:323:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "booksCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "5403:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 176,
                      "name": "_booksCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "5420:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5403:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "5403:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 179,
                      "name": "currentBookName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "5445:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "_currentBookName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "5463:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "5445:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "5445:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 183,
                      "name": "currentNumberOfChapters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5489:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "_currentNumberOfChapters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "5515:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5489:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "5489:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "currentChapterVersesNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "5549:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 188,
                      "name": "_currentChapterVersesNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "5578:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5549:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "5549:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "currentChapterNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "5615:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "_currentChapterNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "5638:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5615:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "5615:44:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "currentVerseNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "5669:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 196,
                      "name": "_currentVerseNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "5690:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5669:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "5669:40:1"
                }
              ]
            },
            "documentation": "@dev This function sets all state variables to a certain value. This function is also needed just in case\nthere is a problem with the Oraclize API and somehow the state variables need to be reset in a way. Again,\nthis function should never be used, but is still a must to have.\n@param _booksCompleted The booksCompleted state variable that may need to be audited.\n@param _currentBookName The currentBookName state variable that may need to be audited.\n@param _currentNumberOfChapters The currentNumberOfChapters state variable that may need to be audited.\n@param _currentChapterVersesNumber The currentChapterVersesNumber state variable that may need to be audited.\n@param _currentChapterNumber The currentChapterNumber state variable that may need to be audited.\n@param _currentVerseNumber The currentVerseNumber state variable that may need to be audited.",
            "id": 200,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 171,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 170,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "5343:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5343:9:1"
              },
              {
                "arguments": null,
                "id": 173,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 172,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "5361:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5361:10:1"
              }
            ],
            "name": "setStateVariables",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "_booksCompleted",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5119:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5119:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "name": "_currentBookName",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5150:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5150:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "name": "_currentNumberOfChapters",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5183:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5183:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "name": "_currentChapterVersesNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5223:33:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5223:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "name": "_currentChapterNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5266:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5266:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "name": "_currentVerseNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "5303:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5303:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5109:225:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5393:0:1"
            },
            "scope": 372,
            "src": "5083:633:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "6573:225:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 217,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "6583:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                            "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                          }
                        },
                        "id": 219,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "_tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6590:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6583:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$10_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bookName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "6583:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "_bookName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "6614:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6583:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "6583:40:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "6633:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                            "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                          }
                        },
                        "id": 226,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "_tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6640:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6633:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$10_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "chapterNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "6633:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "_chapterNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "6669:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6633:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "6633:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "6693:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                            "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 232,
                          "name": "_tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6700:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6693:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$10_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verseNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "6693:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 235,
                      "name": "_verseNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "6727:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6693:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "6693:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 238,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "6749:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                            "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "_tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "6756:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6749:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$10_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verseText",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "6749:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 242,
                      "name": "_verseText",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "6781:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6749:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "6749:42:1"
                }
              ]
            },
            "documentation": "@dev This function makes a correction to a verse just in case any data in a\nverse gets corrupted somehow. This should NEVER happen. But alas, again, this\nfunction should never be used, but is still a must to have.\n@param _tokenIndex The index of the token that is to be audited.\n@param _bookName The name of the book that may need to be audited.\n@param _chapterNumber The chapter number that may need to be audited.\n@param _verseNumber The verse number that may need to be audited.\n@param _verseText The text of the verse that may need to be audited.",
            "id": 246,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 213,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 212,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "6523:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6523:9:1"
              },
              {
                "arguments": null,
                "id": 215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 214,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2340,
                  "src": "6541:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6541:10:1"
              }
            ],
            "name": "auditVerse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "_tokenIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6378:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6378:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "name": "_bookName",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6407:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6407:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "name": "_chapterNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6433:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6433:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "name": "_verseNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6463:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6463:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "name": "_verseText",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "6491:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6491:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6368:146:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6573:0:1"
            },
            "scope": 372,
            "src": "6349:449:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "7569:742:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 258,
                                "name": "_chapter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 250,
                                "src": "7678:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7689:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7678:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 261,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7677:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 262,
                                "name": "_chapter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 250,
                                "src": "7696:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "313530",
                                "id": 263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7708:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_150_by_1",
                                  "typeString": "int_const 150"
                                },
                                "value": "150"
                              },
                              "src": "7696:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 265,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7695:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7677:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8230,
                        8231
                      ],
                      "referencedDeclaration": 8230,
                      "src": "7669:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7669:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "7669:44:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 270,
                                "name": "_verse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "7829:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7838:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7829:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 273,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7828:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 274,
                                "name": "_verse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "7845:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "313736",
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7855:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_176_by_1",
                                  "typeString": "int_const 176"
                                },
                                "value": "176"
                              },
                              "src": "7845:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 277,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7844:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7828:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8230,
                        8231
                      ],
                      "referencedDeclaration": 8230,
                      "src": "7820:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7820:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "7820:40:1"
                },
                {
                  "body": {
                    "id": 322,
                    "nodeType": "Block",
                    "src": "7922:324:1",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 293,
                                        "name": "tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "8049:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                                          "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                                        }
                                      },
                                      "id": 295,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 294,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 282,
                                        "src": "8056:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8049:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$10_storage",
                                        "typeString": "struct BibleTokenBase.Token storage ref"
                                      }
                                    },
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "bookName",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3,
                                    "src": "8049:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "id": 292,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8221,
                                  "src": "8039:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                    "typeString": "function () pure returns (bytes32)"
                                  }
                                },
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8039:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 299,
                                    "name": "_book",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 248,
                                    "src": "8082:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 298,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8221,
                                  "src": "8072:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                    "typeString": "function () pure returns (bytes32)"
                                  }
                                },
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8072:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "8039:49:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 302,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 386,
                                    "src": "8107:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                                      "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                                    }
                                  },
                                  "id": 304,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 303,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 282,
                                    "src": "8114:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8107:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Token_$10_storage",
                                    "typeString": "struct BibleTokenBase.Token storage ref"
                                  }
                                },
                                "id": 305,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chapterNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5,
                                "src": "8107:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 306,
                                "name": "_chapter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 250,
                                "src": "8134:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "8107:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8039:103:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 309,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "8161:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                                    "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                                  }
                                },
                                "id": 311,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 310,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "8168:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8161:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$10_storage",
                                  "typeString": "struct BibleTokenBase.Token storage ref"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verseNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7,
                              "src": "8161:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 313,
                              "name": "_verse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "8186:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "8161:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8039:153:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 321,
                        "nodeType": "IfStatement",
                        "src": "8036:199:1",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 316,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "8216:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                                  "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                                }
                              },
                              "id": 318,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 317,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 282,
                                "src": "8223:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8216:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$10_storage",
                                "typeString": "struct BibleTokenBase.Token storage ref"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verseText",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "8216:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "functionReturnParameters": 256,
                          "id": 320,
                          "nodeType": "Return",
                          "src": "8209:26:1"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "7898:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "7902:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$10_storage_$dyn_storage",
                          "typeString": "struct BibleTokenBase.Token storage ref[] storage ref"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7902:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7898:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 323,
                  "initializationExpression": {
                    "assignments": [
                      282
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 282,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "7883:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7883:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 284,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7895:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7883:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7917:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "7919:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 291,
                    "nodeType": "ExpressionStatement",
                    "src": "7917:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "7879:367:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "5665727365206e6f74206d696e7465642c206f7220696e76616c696420617267756d656e74732e",
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8263:41:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_670e852ec88f68dea3e1c0cc27b9ce985f7ccea6393b50e0acb393348a80ac10",
                      "typeString": "literal_string \"Verse not minted, or invalid arguments.\""
                    },
                    "value": "Verse not minted, or invalid arguments."
                  },
                  "functionReturnParameters": 256,
                  "id": 325,
                  "nodeType": "Return",
                  "src": "8256:48:1"
                }
              ]
            },
            "documentation": "@dev This is the function that will allow anyone in the world that has access\nto the Ethereum blockchain to be able to look up any verse in the Bible that has been minted\nthrough this contract for no cost! That is the awesome part about writing the Bible\nto the blockchain; that once it has been written, it will remain immutable and\nbe accessible to anyone who has access to the Ethereum blockchain.\n@param _book The given book of the Bible.\n@param _chapter The given chapter of the Bible.\n@param _verse The given verse of the Bible.",
            "id": 327,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "retrieveVerse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "_book",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "7447:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7447:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "name": "_chapter",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "7469:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7469:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "name": "_verse",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "7493:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7493:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7437:74:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "7557:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7557:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7556:8:1"
            },
            "scope": 372,
            "src": "7415:896:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "8532:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "5375636365737366756c6c792061646465642066756e64732e",
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8549:27:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d4654ab65083182c8e2b349efa34dee7b1176ae694605223b3ad1f4e04ed6e53",
                      "typeString": "literal_string \"Successfully added funds.\""
                    },
                    "value": "Successfully added funds."
                  },
                  "functionReturnParameters": 331,
                  "id": 333,
                  "nodeType": "Return",
                  "src": "8542:34:1"
                }
              ]
            },
            "documentation": "@dev This function is used for debugging purposes when calculating the differing\nOraclize queries.",
            "id": 335,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8467:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "8520:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8520:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8519:8:1"
            },
            "scope": 372,
            "src": "8450:133:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "8809:71:1",
              "statements": [
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "8819:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8819:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8276,
                      "src": "8837:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BibleTokenCore_$372",
                        "typeString": "contract BibleTokenCore"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "8837:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8819:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 345,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "8866:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 339,
                  "id": 346,
                  "nodeType": "Return",
                  "src": "8859:14:1"
                }
              ]
            },
            "documentation": "@dev This function is used for debugging purposes when calculating the differing\nOraclize queries.",
            "id": 348,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "contractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8746:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "8796:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8796:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8795:9:1"
            },
            "scope": 372,
            "src": "8722:158:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "9090:106:1",
              "statements": [
                {
                  "assignments": [
                    354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 354,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 371,
                      "src": "9100:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9100:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 357,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 355,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8276,
                      "src": "9118:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BibleTokenCore_$372",
                        "typeString": "contract BibleTokenCore"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "9118:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9100:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "9148:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9158:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9148:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8230,
                        8231
                      ],
                      "referencedDeclaration": 8230,
                      "src": "9140:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9140:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "9140:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "9181:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2259,
                        "src": "9170:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9170:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9170:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "9170:19:1"
                }
              ]
            },
            "documentation": "@dev Withdraws the current balance of the contract; this can only be done by the\nowner of the contract.",
            "id": 371,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 350,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2285,
                  "src": "9059:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9059:9:1"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9048:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9090:0:1"
            },
            "scope": 372,
            "src": "9024:172:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 373,
        "src": "640:8563:1"
      }
    ],
    "src": "225:8979:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x2c2b9c9a4a25e24b174f26114e8926a9f2128fe4",
      "transactionHash": "0x26cca9a7d5210cad4ef40b2f12b8b210335546bea9ff258240d933f375eb36f4"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x502d1b01170576364c1bf493154e5f677ef52fa1",
      "transactionHash": "0x5c034c0e3abd8ff0c1083b773b25a2b10d07879db9ff65cfdf6dfffa444172e6"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-07T04:01:50.624Z"
}