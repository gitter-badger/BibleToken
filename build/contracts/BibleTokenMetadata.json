{
  "contractName": "BibleTokenMetadata",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenIndex",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6000805460a060020a60ff021916905560c0604052600a60808190527f4269626c65546f6b656e0000000000000000000000000000000000000000000060a0908152620000509160069190620003da565b506040805180820190915260028082527f425400000000000000000000000000000000000000000000000000000000000060209092019182526200009791600791620003da565b50348015620000a557600080fd5b5060008054600160a060020a031916331781557f01ffc9a7000000000000000000000000000000000000000000000000000000008152600160208181527fb45820386466a8e01597d6e1efaf8f11ba4467972de5ca6c1f8aa3544ac2888e805460ff199081168417909155604080517f6973417070726f766564466f72416c6c28616464726573732c6164647265737381527f29000000000000000000000000000000000000000000000000000000000000008185015281519081900360210181207f676574417070726f7665642875696e7432353629000000000000000000000000825282519182900360140182207f736574417070726f76616c466f72416c6c28616464726573732c626f6f6c29008352835192839003601f0183207f617070726f766528616464726573732c75696e74323536290000000000000000845284519384900360180184207f7472616e7366657246726f6d28616464726573732c616464726573732c75696e85527f74323536290000000000000000000000000000000000000000000000000000008589015285519485900360250185207f736166655472616e7366657246726f6d28616464726573732c616464726573738087527f2c75696e74323536290000000000000000000000000000000000000000000000878b015287519687900360290187209087527f2c75696e743235362c6279746573290000000000000000000000000000000000878b0152875196879003602f0187207f6f776e65724f662875696e743235362900000000000000000000000000000000885288519788900360100188207f62616c616e63654f6628616464726573732900000000000000000000000000008952895198899003601201892018181818181818187fffffffff00000000000000000000000000000000000000000000000000000000908116875285855282872080548516871790557f73796d626f6c2829000000000000000000000000000000000000000000000000825282519182900360080182207f6e616d6528290000000000000000000000000000000000000000000000000000835283519283900360060190922090911816855291839052922080549092161790556200047f565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041d57805160ff19168380011785556200044d565b828001600101855582156200044d579182015b828111156200044d57825182559160200191906001019062000430565b506200045b9291506200045f565b5090565b6200047c91905b808211156200045b576000815560010162000466565b90565b61103b806200048f6000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a781146100f557806306fdde0314610140578063081812fc146101ca578063095ea7b3146101fe57806323b872dd146102245780633f4ba83a1461024e57806342842e0e146102635780635c975abb1461028d5780636352211e146102a257806370a08231146102ba5780638456cb59146102ed5780638da5cb5b1461030257806395d89b4114610317578063a22cb4651461032c578063b88d4fde14610352578063e985e9c51461038b578063f2fde38b146103b2575b600080fd5b34801561010157600080fd5b5061012c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19600435166103d3565b604080519115158252519081900360200190f35b34801561014c57600080fd5b5061015561040b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018f578181015183820152602001610177565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101d657600080fd5b506101e26004356104a1565b60408051600160a060020a039092168252519081900360200190f35b34801561020a57600080fd5b50610222600160a060020a03600435166024356104e3565b005b34801561023057600080fd5b50610222600160a060020a0360043581169060243516604435610637565b34801561025a57600080fd5b50610222610724565b34801561026f57600080fd5b50610222600160a060020a03600435811690602435166044356107ab565b34801561029957600080fd5b5061012c6107cc565b3480156102ae57600080fd5b506101e26004356107ed565b3480156102c657600080fd5b506102db600160a060020a0360043516610811565b60408051918252519081900360200190f35b3480156102f957600080fd5b50610222610844565b34801561030e57600080fd5b506101e26108e1565b34801561032357600080fd5b506101556108f0565b34801561033857600080fd5b50610222600160a060020a03600435166024351515610951565b34801561035e57600080fd5b50610222600160a060020a03600480358216916024803590911691604435916064359081019101356109d4565b34801561039757600080fd5b5061012c600160a060020a0360043581169060243516610a17565b3480156103be57600080fd5b50610222600160a060020a0360043516610a72565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19811660009081526001602052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104975780601f1061046c57610100808354040283529160200191610497565b820191906000526020600020905b81548152906001019060200180831161047a57829003601f168201915b5050505050905090565b6000818152600260205260408120548290600160a060020a031615156104c657600080fd5b5050600090815260036020526040902054600160a060020a031690565b6000818152600260205260408120548290600160a060020a03163381148061052e5750600160a060020a038116600090815260056020908152604080832033845290915290205460ff165b151561053957600080fd5b6000848152600260205260409020548490600160a060020a0316151561055e57600080fd5b600085815260026020526040902054600160a060020a039081169450861684141561058857600080fd5b600085815260036020526040902054600160a060020a03161580156105b45750600160a060020a038616155b156105be57600080fd5b600085815260036020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a8116918217909255835189815293519093918816927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3505050505050565b6000818152600260205260408120548290600160a060020a0316338114806106755750600082815260036020526040902054600160a060020a031633145b806106a35750600160a060020a038116600090815260056020908152604080832033845290915290205460ff165b15156106ae57600080fd5b6000848152600260205260409020548490600160a060020a031615156106d357600080fd5b600085815260026020526040902054600160a060020a039081169450871684146106fc57600080fd5b600160a060020a038616151561071157600080fd5b61071b8686610b06565b50505050505050565b600054600160a060020a0316331461073b57600080fd5b60005474010000000000000000000000000000000000000000900460ff16151561076457600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b6107c78383836020604051908101604052806000815250610b8c565b505050565b60005474010000000000000000000000000000000000000000900460ff1681565b600081815260026020526040902054600160a060020a031680151561040657600080fd5b6000600160a060020a038216151561082857600080fd5b50600160a060020a031660009081526004602052604090205490565b600054600160a060020a0316331461085b57600080fd5b60005474010000000000000000000000000000000000000000900460ff161561088357600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104975780601f1061046c57610100808354040283529160200191610497565b600160a060020a038216151561096657600080fd5b336000818152600560209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610a1085858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843750610b8c945050505050565b5050505050565b6000600160a060020a0383161515610a2e57600080fd5b600160a060020a0382161515610a4357600080fd5b50600160a060020a03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600054600160a060020a03163314610a8957600080fd5b600160a060020a0381161515610a9e57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600081815260026020526040902054600160a060020a0316610b288183610e2e565b610b328183610e98565b610b3c8383610f4e565b82600160a060020a031681600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050565b60008281526002602052604081205481908490600160a060020a031633811480610bcc5750600082815260036020526040902054600160a060020a031633145b80610bfa5750600160a060020a038116600090815260056020908152604080832033845290915290205460ff165b1515610c0557600080fd5b6000868152600260205260409020548690600160a060020a03161515610c2a57600080fd5b600087815260026020526040902054600160a060020a03908116955089168514610c5357600080fd5b600160a060020a0388161515610c6857600080fd5b610c728888610b06565b610c8488600160a060020a0316610fdf565b15610e235787600160a060020a031663f0b9e5ba8a89896040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610d21578181015183820152602001610d09565b50505050905090810190601f168015610d4e5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610d6f57600080fd5b505af1158015610d83573d6000803e3d6000fd5b505050506040513d6020811015610d9957600080fd5b5051604080517f6f6e455243373231526563656976656428616464726573732c75696e7432353681527f2c62797465732900000000000000000000000000000000000000000000000000602082015290519081900360270190209094507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19808616911614610e2357600080fd5b505050505050505050565b6000818152600360209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916905580518481529051600160a060020a038616927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35050565b600081815260026020526040902054600160a060020a03838116911614610ebe57600080fd5b600160a060020a03821660009081526004602052604081205411610ede57fe5b600160a060020a038216600090815260046020526040902054610f0890600163ffffffff610fe716565b600160a060020a03909216600090815260046020908152604080832094909455918152600290915220805473ffffffffffffffffffffffffffffffffffffffff19169055565b600081815260026020526040902054600160a060020a031615610f7057600080fd5b6000818152600260209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915583526004909152902054610fbf906001610ff9565b600160a060020a0390921660009081526004602052604090209190915550565b6000903b1190565b600082821115610ff357fe5b50900390565b60008282018381101561100857fe5b93925050505600a165627a7a72305820d53dade17f8726540fa2a03671444b94e694efd6afc0ae90474856c8e3ad5bce0029",
  "deployedBytecode": "",
  "sourceMap": "645:5:14:-;624:26;;-1:-1:-1;;;;;;624:26:14;;;517:39:3;386:900;517:39;;386:900;517:39;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;626:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;714:209;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;999:5:13;:18;;-1:-1:-1;;;;;;999:18:13;1007:10;999:18;;;661:31:11;;;999:18:13;661:31:11;;;;;:38;;-1:-1:-1;;661:38:11;;;;;;;;:31;4895:46:5;;;;;;;;;;;;;;;;;;;;4845:33;;;;;;;;;;;;;4784:44;;;;;;;;;;;;;4730:37;;;;;;;;;;;;;4663:50;;;;;;;;;;;;;;;;;;4592:54;;;;;;;;;;;;;;;;;;;4515:60;;;;;;;;;;;;;;;;;;4469:29;;;;;;;;;;;;;4421:31;;;;;;;;;;;;;4420:79;:156;:227;:294;:348;:409;:459;:522;661:31:11;4380:564:5;;;;;;;;;;;:571;;;;;;;;855:21:3;;;;;;;;;;;;;819:19;;;;;;;;;;;;;;818:59;;;778:101;;;;;;;;;:108;;;;;;;;386:900;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;386:900:3;;;-1:-1:-1;386:900:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "386:900:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:176:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;861:176:11;-1:-1:-1;;861:176:11;;;;;;;;;;;;;;;;;;;;;;;986:108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;986:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;986:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10490:203:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10490:203:5;;;;;;;;;-1:-1:-1;;;;;10490:203:5;;;;;;;;;;;;;;9114:469;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9114:469:5;-1:-1:-1;;;;;9114:469:5;;;;;;;;;8337:362;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8337:362:5;-1:-1:-1;;;;;8337:362:5;;;;;;;;;;;;1291:125:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1291:125:14;;;;7381:189:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7381:189:5;-1:-1:-1;;;;;7381:189:5;;;;;;;;;;;;624:26:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:26:14;;;;5692:209:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5692:209:5;;;;;5256:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5256:202:5;-1:-1:-1;;;;;5256:202:5;;;;;;;;;;;;;;;;;;;;;1080:123:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1080:123:14;;;;510:20:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:20:13;;;;1171:112:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1171:112:3;;;;9995:273:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9995:273:5;-1:-1:-1;;;;;9995:273:5;;;;;;;;;6772:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6772:213:5;-1:-1:-1;;;;;6772:213:5;;;;;;;;;;;;;;;;;;;;;;;;;;10913:280;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10913:280:5;-1:-1:-1;;;;;10913:280:5;;;;;;;;;;1360:221:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1360:221:13;-1:-1:-1;;;;;1360:221:13;;;;;861:176:11;-1:-1:-1;;997:33:11;;970:4;997:33;;;:19;:33;;;;;;;;861:176;;;;:::o;986:108:3:-;1078:9;1071:16;;;;;;;;-1:-1:-1;;1071:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:6;;1071:16;;1078:9;;1071:16;;1078:9;1071:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:108;:::o;10490:203:5:-;10627:7;4208:25;;;:12;:25;;;;;;10597:11;;-1:-1:-1;;;;;4208:25:5;:39;;4200:48;;;;;;-1:-1:-1;;10657:29:5;;;;:16;:29;;;;;;-1:-1:-1;;;;;10657:29:5;;10490:203::o;9114:469::-;9290:18;3387:25;;;:12;:25;;;;;;9229:11;;-1:-1:-1;;;;;3387:25:5;3444:10;3430:24;;;:68;;-1:-1:-1;;;;;;3458:28:5;;;;;;:16;:28;;;;;;;;3487:10;3458:40;;;;;;;;;;3430:68;3422:77;;;;;;;;4245:1;4208:25;;;:12;:25;;;;;;9263:11;;-1:-1:-1;;;;;4208:25:5;:39;;4200:48;;;;;;9311:25;;;;:12;:25;;;;;;-1:-1:-1;;;;;9311:25:5;;;;-1:-1:-1;9354:23:5;;;;;9346:32;;;;;;9439:1;9398:29;;;:16;:29;;;;;;-1:-1:-1;;;;;9398:29:5;:43;:70;;;;-1:-1:-1;;;;;;9445:23:5;;;9398:70;9396:73;9388:82;;;;;;9481:29;;;;:16;:29;;;;;;;;;:41;;-1:-1:-1;;9481:41:5;-1:-1:-1;;;;;9481:41:5;;;;;;;;;9532:44;;;;;;;9481:41;;9532:44;;;;;;;;;;;;3509:1;9114:469;;;;;:::o;8337:362::-;8534:18;3766:25;;;:12;:25;;;;;;8473:11;;-1:-1:-1;;;;;3766:25:5;3836:10;3822:24;;;:83;;-1:-1:-1;3862:29:5;;;;:16;:29;;;;;;-1:-1:-1;;;;;3862:29:5;3895:10;3862:43;3822:83;:139;;;-1:-1:-1;;;;;;3921:28:5;;;;;;:16;:28;;;;;;;;3950:10;3921:40;;;;;;;;;;3822:139;3801:174;;;;;;;;4245:1;4208:25;;;:12;:25;;;;;;8507:11;;-1:-1:-1;;;;;4208:25:5;:39;;4200:48;;;;;;8555:25;;;;:12;:25;;;;;;-1:-1:-1;;;;;8555:25:5;;;;-1:-1:-1;8598:19:5;;;;8590:28;;;;;;-1:-1:-1;;;;;8636:17:5;;;;8628:26;;;;;;8665:27;8675:3;8680:11;8665:9;:27::i;:::-;3985:1;8337:362;;;;;;:::o;1291:125:14:-;1163:5:13;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;970:6:14;;;;;;;962:15;;;;;;;;1385:5;1376:14;;-1:-1:-1;;1376:14:14;;;1400:9;;;;1385:5;1400:9;1291:125::o;7381:189:5:-;7517:46;7535:5;7542:3;7547:11;7517:46;;;;;;;;;;;;;:17;:46::i;:::-;7381:189;;;:::o;624:26:14:-;;;;;;;;;:::o;5692:209:5:-;5791:14;5830:25;;;:12;:25;;;;;;-1:-1:-1;;;;;5830:25:5;5873:20;;;5865:29;;;;;5256:202;5352:7;-1:-1:-1;;;;;5383:20:5;;;;5375:29;;;;;;-1:-1:-1;;;;;;5421:30:5;;;;;:22;:30;;;;;;;5256:202::o;1080:123:14:-;1163:5:13;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;802:6:14;;;;;;;801:7;793:16;;;;;;1166:6;:13;;-1:-1:-1;;1166:13:14;;;;;1189:7;;;;1166:6;1189:7;1080:123::o;510:20:13:-;;;-1:-1:-1;;;;;510:20:13;;:::o;1171:112:3:-;1265:11;1258:18;;;;;;;;-1:-1:-1;;1258:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:6;;1258:18;;1265:11;;1258:18;;1265:11;1258:18;;;;;;;;;;;;;;;;;;;;;;;;9995:273:5;-1:-1:-1;;;;;10118:23:5;;;;10110:32;;;;;;10169:10;10152:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;10152:39:5;;;;;;;;;;;;:51;;-1:-1:-1;;10152:51:5;;;;;;;;;;10213:48;;;;;;;10152:39;;10169:10;10213:48;;;;;;;;;;;9995:273;;:::o;6772:213::-;6929:49;6947:5;6954:3;6959:11;6972:5;;6929:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6929:17:5;;-1:-1:-1;;;;;6929:49:5:i;:::-;6772:213;;;;;:::o;10913:280::-;11043:4;-1:-1:-1;;;;;11071:20:5;;;;11063:29;;;;;;-1:-1:-1;;;;;11110:23:5;;;;11102:32;;;;;;-1:-1:-1;;;;;;11151:24:5;;;;;;;:16;:24;;;;;;;;:35;;;;;;;;;;;;;;;10913:280::o;1360:221:13:-;1163:5;;-1:-1:-1;;;;;1163:5:13;1149:10;:19;1141:28;;;;;;-1:-1:-1;;;;;1475:23:13;;;;1467:32;;;;;;1530:5;;;1509:38;;-1:-1:-1;;;;;1509:38:13;;;;1530:5;;;1509:38;;;1557:5;:17;;-1:-1:-1;;1557:17:13;-1:-1:-1;;;;;1557:17:13;;;;;;;;;;1360:221::o;12297:318:5:-;12402:12;12417:25;;;:12;:25;;;;;;-1:-1:-1;;;;;12417:25:5;12453:32;12417:25;12430:11;12453:13;:32::i;:::-;12495;12509:4;12515:11;12495:13;:32::i;:::-;12537:28;12548:3;12553:11;12537:10;:28::i;:::-;12591:3;-1:-1:-1;;;;;12576:32:5;12585:4;-1:-1:-1;;;;;12576:32:5;;12596:11;12576:32;;;;;;;;;;;;;;;;;;12297:318;;;:::o;11498:588::-;11723:18;3766:25;;;:12;:25;;;;;;11723:18;;11662:11;;-1:-1:-1;;;;;3766:25:5;3836:10;3822:24;;;:83;;-1:-1:-1;3862:29:5;;;;:16;:29;;;;;;-1:-1:-1;;;;;3862:29:5;3895:10;3862:43;3822:83;:139;;;-1:-1:-1;;;;;;3921:28:5;;;;;;:16;:28;;;;;;;;3950:10;3921:40;;;;;;;;;;3822:139;3801:174;;;;;;;;4245:1;4208:25;;;:12;:25;;;;;;11696:11;;-1:-1:-1;;;;;4208:25:5;:39;;4200:48;;;;;;11744:25;;;;:12;:25;;;;;;-1:-1:-1;;;;;11744:25:5;;;;-1:-1:-1;11787:19:5;;;;11779:28;;;;;;-1:-1:-1;;;;;11825:17:5;;;;11817:26;;;;;;11854:27;11864:3;11869:11;11854:9;:27::i;:::-;11896:16;:3;-1:-1:-1;;;;;11896:14:5;;:16::i;:::-;11892:188;;;11964:3;-1:-1:-1;;;;;11944:41:5;;11986:5;11993:11;12006:5;11944:68;;;;;;;;;;;;;-1:-1:-1;;;;;11944:68:5;-1:-1:-1;;;;;11944:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11944:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11944:68:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11944:68:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11944:68:5;1396:52;;;;;;;11944:68;1396:52;;;;;;;;;;;;;11944:68;;-1:-1:-1;;;12034:34:5;;;;;;12026:43;;;;;;3985:1;11498:588;;;;;;;;:::o;12772:198::-;12892:29;;;;:16;:29;;;;;;;;12885:36;;-1:-1:-1;;12885:36:5;;;12931:32;;;;;;;-1:-1:-1;;;;;12931:32:5;;;;;;;;;;;12772:198;;:::o;13276:326::-;13389:25;;;;:12;:25;;;;;;-1:-1:-1;;;;;13389:34:5;;;:25;;:34;13381:43;;;;;;-1:-1:-1;;;;;13441:29:5;;13473:1;13441:29;;;:22;:29;;;;;;:33;13434:41;;;;-1:-1:-1;;;;;13517:29:5;;;;;;:22;:29;;;;;;:36;;13551:1;13517:36;:33;:36;:::i;:::-;-1:-1:-1;;;;;13485:29:5;;;;;;;:22;:29;;;;;;;;:68;;;;13570:25;;;:12;:25;;;;13563:32;;-1:-1:-1;;13563:32:5;;;13276:326::o;13901:278::-;14053:1;14016:25;;;:12;:25;;;;;;-1:-1:-1;;;;;14016:25:5;:39;14008:48;;;;;;14067:25;;;;:12;:25;;;;;;;;:31;;-1:-1:-1;;14067:31:5;-1:-1:-1;;;;;14067:31:5;;;;;;;;14138:27;;:22;:27;;;;;;:34;;-1:-1:-1;14138:31:5;:34::i;:::-;-1:-1:-1;;;;;14108:27:5;;;;;;;:22;:27;;;;;:64;;;;-1:-1:-1;13901:278:5:o;423:658:15:-;519:4;979:18;;1066:8;;423:658::o;1445:176:12:-;1551:7;1581:8;;;;1574:16;;;;-1:-1:-1;1607:7:12;;;1445:176::o;1739:198::-;1845:7;1880;;;1904;;;;1897:15;;;;1929:1;1739:198;-1:-1:-1;;;1739:198:12:o",
  "source": "/**\n * @file BibleTokenMetadata.sol\n * @author John DeBord <i@johndebord.tk>\n * @date 2018\n * \n * Utilizing 0xcert's ERC721 token implementation\n * https://0xcert.org/\n */\n\npragma solidity ^0.4.20;\n\nimport \"./BibleTokenOwnership.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title BibleTokenMetadata\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract BibleTokenMetadata is\n    BibleTokenOwnership,\n    ERC721Metadata\n{\n\n    /**\n    * @dev The name of the token.\n    */\n    string private tokenName = \"BibleToken\";\n\n    /**\n    * @dev The abbreviated symbol of the token.\n    */\n    string private tokenSymbol = \"BT\";\n\n    /**\n    * @dev Contract constructor.\n    */\n    function BibleTokenMetadata(\n    )\n        public\n    {\n        supportedInterfaces[bytes4(\n            (keccak256(\"name()\")) ^\n            (keccak256(\"symbol()\")))] = true; // ERC721Metadata; 0x93254542\n    }\n\n    /**\n    * @dev Returns the name of the token.\n    */\n    function name()\n        external\n        view\n        returns (string)\n    {\n        return tokenName;\n    }\n\n    /**\n    * @dev Returns the abbreviated symbol of the token.\n    */\n    function symbol()\n        external\n        view\n        returns (string)\n    {\n        return tokenSymbol;\n    }\n\n}\n",
  "sourcePath": "/home/i/BibleToken/contracts/BibleTokenMetadata.sol",
  "ast": {
    "absolutePath": "/home/i/BibleToken/contracts/BibleTokenMetadata.sol",
    "exportedSymbols": {
      "BibleTokenMetadata": [
        461
      ]
    },
    "id": 462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 412,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "173:24:3"
      },
      {
        "absolutePath": "/home/i/BibleToken/contracts/BibleTokenOwnership.sol",
        "file": "./BibleTokenOwnership.sol",
        "id": 413,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 1981,
        "src": "199:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/i/BibleToken/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 414,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 2112,
        "src": "235:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 415,
              "name": "BibleTokenOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1980,
              "src": "421:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BibleTokenOwnership_$1980",
                "typeString": "contract BibleTokenOwnership"
              }
            },
            "id": 416,
            "nodeType": "InheritanceSpecifier",
            "src": "421:19:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 417,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2111,
              "src": "446:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$2111",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 418,
            "nodeType": "InheritanceSpecifier",
            "src": "446:14:3"
          }
        ],
        "contractDependencies": [
          2311,
          2371,
          1980,
          1990,
          2090,
          2111,
          2157
        ],
        "contractKind": "contract",
        "documentation": "@title BibleTokenMetadata\n@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
        "fullyImplemented": true,
        "id": 461,
        "linearizedBaseContracts": [
          461,
          2111,
          1980,
          2157,
          1990,
          2090,
          2371,
          2311
        ],
        "name": "BibleTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 421,
            "name": "tokenName",
            "nodeType": "VariableDeclaration",
            "scope": 461,
            "src": "517:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 419,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "517:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4269626c65546f6b656e",
              "id": 420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:12:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4173bc86dd67524153ffa3a712dd6608e2583494b5a7be10fc67fffe6aeae992",
                "typeString": "literal_string \"BibleToken\""
              },
              "value": "BibleToken"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 424,
            "name": "tokenSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 461,
            "src": "626:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 422,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "626:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4254",
              "id": 423,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "655:4:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d9989bcc79bb076ebef271f7bf1a003ba3278e72bdc68debc653f8319b096dbd",
                "typeString": "literal_string \"BT\""
              },
              "value": "BT"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "768:155:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2134,
                        "src": "778:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 439,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "6e616d652829",
                                      "id": 430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "829:8:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_06fdde0383f15d582d1a74511486c9ddf862a882fb7904b3d9fe9b8b8e58a796",
                                        "typeString": "literal_string \"name()\""
                                      },
                                      "value": "name()"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_06fdde0383f15d582d1a74511486c9ddf862a882fb7904b3d9fe9b8b8e58a796",
                                        "typeString": "literal_string \"name()\""
                                      }
                                    ],
                                    "id": 429,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8221,
                                    "src": "819:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "819:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "818:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "^",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "73796d626f6c2829",
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "865:10:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
                                        "typeString": "literal_string \"symbol()\""
                                      },
                                      "value": "symbol()"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
                                        "typeString": "literal_string \"symbol()\""
                                      }
                                    ],
                                    "id": 433,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8221,
                                    "src": "855:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "855:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "id": 436,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "854:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "818:59:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "798:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": "bytes4"
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "798:80:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "778:101:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "882:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "778:108:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "778:108:3"
                }
              ]
            },
            "documentation": "@dev Contract constructor.",
            "id": 444,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "BibleTokenMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "741:7:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:0:3"
            },
            "scope": 461,
            "src": "714:209:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "1061:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 449,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 421,
                    "src": "1078:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 448,
                  "id": 450,
                  "nodeType": "Return",
                  "src": "1071:16:3"
                }
              ]
            },
            "documentation": "@dev Returns the name of the token.",
            "id": 452,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1049:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1048:8:3"
            },
            "scope": 461,
            "src": "986:108:3",
            "stateMutability": "view",
            "superFunction": 2105,
            "visibility": "external"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "1248:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 457,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 424,
                    "src": "1265:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 456,
                  "id": 458,
                  "nodeType": "Return",
                  "src": "1258:18:3"
                }
              ]
            },
            "documentation": "@dev Returns the abbreviated symbol of the token.",
            "id": 460,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "1236:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1235:8:3"
            },
            "scope": 461,
            "src": "1171:112:3",
            "stateMutability": "view",
            "superFunction": 2110,
            "visibility": "external"
          }
        ],
        "scope": 462,
        "src": "386:900:3"
      }
    ],
    "src": "173:1114:3"
  },
  "legacyAST": {
    "absolutePath": "/home/i/BibleToken/contracts/BibleTokenMetadata.sol",
    "exportedSymbols": {
      "BibleTokenMetadata": [
        461
      ]
    },
    "id": 462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 412,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "173:24:3"
      },
      {
        "absolutePath": "/home/i/BibleToken/contracts/BibleTokenOwnership.sol",
        "file": "./BibleTokenOwnership.sol",
        "id": 413,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 1981,
        "src": "199:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/i/BibleToken/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 414,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 2112,
        "src": "235:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 415,
              "name": "BibleTokenOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1980,
              "src": "421:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BibleTokenOwnership_$1980",
                "typeString": "contract BibleTokenOwnership"
              }
            },
            "id": 416,
            "nodeType": "InheritanceSpecifier",
            "src": "421:19:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 417,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2111,
              "src": "446:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$2111",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 418,
            "nodeType": "InheritanceSpecifier",
            "src": "446:14:3"
          }
        ],
        "contractDependencies": [
          2311,
          2371,
          1980,
          1990,
          2090,
          2111,
          2157
        ],
        "contractKind": "contract",
        "documentation": "@title BibleTokenMetadata\n@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
        "fullyImplemented": true,
        "id": 461,
        "linearizedBaseContracts": [
          461,
          2111,
          1980,
          2157,
          1990,
          2090,
          2371,
          2311
        ],
        "name": "BibleTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 421,
            "name": "tokenName",
            "nodeType": "VariableDeclaration",
            "scope": 461,
            "src": "517:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 419,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "517:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4269626c65546f6b656e",
              "id": 420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:12:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4173bc86dd67524153ffa3a712dd6608e2583494b5a7be10fc67fffe6aeae992",
                "typeString": "literal_string \"BibleToken\""
              },
              "value": "BibleToken"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 424,
            "name": "tokenSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 461,
            "src": "626:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 422,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "626:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4254",
              "id": 423,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "655:4:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d9989bcc79bb076ebef271f7bf1a003ba3278e72bdc68debc653f8319b096dbd",
                "typeString": "literal_string \"BT\""
              },
              "value": "BT"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "768:155:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2134,
                        "src": "778:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 439,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "6e616d652829",
                                      "id": 430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "829:8:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_06fdde0383f15d582d1a74511486c9ddf862a882fb7904b3d9fe9b8b8e58a796",
                                        "typeString": "literal_string \"name()\""
                                      },
                                      "value": "name()"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_06fdde0383f15d582d1a74511486c9ddf862a882fb7904b3d9fe9b8b8e58a796",
                                        "typeString": "literal_string \"name()\""
                                      }
                                    ],
                                    "id": 429,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8221,
                                    "src": "819:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "819:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "818:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "^",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "73796d626f6c2829",
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "865:10:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
                                        "typeString": "literal_string \"symbol()\""
                                      },
                                      "value": "symbol()"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec",
                                        "typeString": "literal_string \"symbol()\""
                                      }
                                    ],
                                    "id": 433,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8221,
                                    "src": "855:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "855:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "id": 436,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "854:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "818:59:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "798:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": "bytes4"
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "798:80:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "778:101:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "882:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "778:108:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "778:108:3"
                }
              ]
            },
            "documentation": "@dev Contract constructor.",
            "id": 444,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "BibleTokenMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "741:7:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:0:3"
            },
            "scope": 461,
            "src": "714:209:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "1061:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 449,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 421,
                    "src": "1078:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 448,
                  "id": 450,
                  "nodeType": "Return",
                  "src": "1071:16:3"
                }
              ]
            },
            "documentation": "@dev Returns the name of the token.",
            "id": 452,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1049:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1048:8:3"
            },
            "scope": 461,
            "src": "986:108:3",
            "stateMutability": "view",
            "superFunction": 2105,
            "visibility": "external"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "1248:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 457,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 424,
                    "src": "1265:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 456,
                  "id": 458,
                  "nodeType": "Return",
                  "src": "1258:18:3"
                }
              ]
            },
            "documentation": "@dev Returns the abbreviated symbol of the token.",
            "id": 460,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "1236:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1235:8:3"
            },
            "scope": 461,
            "src": "1171:112:3",
            "stateMutability": "view",
            "superFunction": 2110,
            "visibility": "external"
          }
        ],
        "scope": 462,
        "src": "386:900:3"
      }
    ],
    "src": "173:1114:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-07T04:00:26.279Z"
}